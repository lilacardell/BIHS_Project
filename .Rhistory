rm(list=ls(pattern="boys"),men_20)
FAO_hwb=bind_rows(FAO_women,FAO_men)
FAO_hwb_med=bind_rows(FAO_women_med,FAO_men_med)%>%
mutate(age_grp_FAO=if_else(year%in%(4:8),"4-8",if_else(year%in%(9:13),"9-13",if_else(year%in%(14:18),"14-18",if_else(year%in%(19:30),"19-30",if_else(year%in%(31:50),"31-50",if_else(year%in%(51:69),"51-69",if_else(year>=70,"70 and over",as.character(year)))))))))%>%
dplyr::rename(age=year)%>%
group_by(sex,age_grp_FAO)%>%
dplyr::mutate(h_FAO_grp=median(h_med),w_FAO_grp=median(w_med))%>%
dplyr::rename(h_FAO=h_med,w_FAO=w_med,b_FAO=b_med)
rm(list=ls(pattern="men"))
#read in energy requirement formulas
FAO_adult <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="Adult_BMRPAL",range = "A1:M37",col_names = TRUE)%>%
dplyr::select(1:6,9:11,13)%>%
mutate(sex=if_else(sex=="Male",1,2))%>%
filter(agemin>=18)
FAO_child <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="Child_TEEPAL",range = "A1:P97",col_names = TRUE)%>%
mutate(sex=if_else(sex=="Male",1,2))%>%
dplyr::select(1:6,11,13,14,16)
FAO=bind_rows(FAO_adult,FAO_child)
FAO_energy=FAO_hwb_med%>%
fuzzy_left_join(FAO,by=c("sex"="sex","age"="agemin","age"="agemax"),match_fun=list(`==`,`>=`,`<`))%>%
dplyr::rename(sex=sex.x)%>%
dplyr::select(-sex.y,-agemin,-agemax)%>%
mutate(protein_FAO_age=if_else(pregnant==1,protein_FAO_perkg*w_FAO+14,
if_else(lactating==1,protein_FAO_perkg*w_FAO+15.75,
protein_FAO_perkg*w_FAO)),
kcal_FAO_age=if_else(pregnant==1,multiplier*(kc+kc1*w_FAO+kc2*(w_FAO^2)+E_disp)+285,
if_else(lactating==1,multiplier*(kc+kc1*w_FAO+kc2*(w_FAO^2)+E_disp)+485,
multiplier*(kc+kc1*w_FAO+kc2*(w_FAO^2)+E_disp))),
kcal_FAO_grp=if_else(pregnant==1,multiplier*(kc+kc1*w_FAO_grp+kc2*(w_FAO_grp^2)+E_disp)+285,
if_else(lactating==1,multiplier*(kc+kc1*w_FAO_grp+kc2*(w_FAO_grp^2)+E_disp)+485,
multiplier*(kc+kc1*w_FAO_grp+kc2*(w_FAO_grp^2)+E_disp))))%>%
dplyr::rename(weight_FAO_age=w_FAO,height_FAO_age=h_FAO,weight_FAO_grp=w_FAO_grp,height_FAO_grp=h_FAO_grp,BMI_FAO_age=b_FAO)
base_FAO=FAO_energy%>%
filter(age==18,sex==1,activity=="moderate")
base_kcal_FAO=base_FAO$kcal_FAO_age
#join FAO standards with roster
#calculate energy and protein requirements using reference and individual weights, activity adjustments for everyone
w.I.roster.2015=w.I.roster.2015%>%
mutate(sex=as.numeric(sex))%>%
left_join(FAO_energy,by=c("sex","age","activity","pregnant","lactating"))%>%
mutate(kcal_FAO_I=if_else(pregnant==1,multiplier*(kc+kc1*weight+kc2*(weight^2)+E_disp)+285,
if_else(lactating==1,multiplier*(kc+kc1*weight+kc2*(weight^2)+E_disp)+485,
multiplier*(kc+kc1*weight+kc2*(weight^2)+E_disp))),
AE_FAO_I=kcal_FAO_I/base_kcal_FAO,AE_FAO_age=kcal_FAO_age/base_kcal_FAO,AE_FAO_grp=kcal_FAO_grp/base_kcal_FAO,
BMI_FAO_age=if_else(age>18,21.5,BMI_FAO_age))%>%
dplyr::select(-(kc:multiplier))
rm(list=ls(pattern="FAO"))
setwd("C:/Users/lilac2/Box/BIHS_Project")
#setwd("/Users/juli/Desktop/BIHS/master/BIHS_Project")
library(plyr)
#DRI standards
#energy requirements
IOM_energy <- read_excel("./Data/Clean Data/nutrient standards/IOM_requirements.xlsx",sheet="Energy_IOM",range = "A1:R97",col_names = TRUE)%>%
mutate(sex=if_else(sex=="Male",1,2),activity=revalue(PA_level,c("sedentary"="light","low active"="light","active"="moderate","very active"="heavy")),pregnant=if_else(lifestage=="Pregnancy",1,0),lactating=if_else(lifestage=="Lactation",1,0))%>%
dplyr::select(-1,-2,-PA_level,-age_refmean,-EER_eq)%>%
dplyr::rename(agemin=age_lower_yrs,agemax=age_upper_yrs,kcal_IOM_grp=EER_IOM_ref,height_IOM_grp=refht_IOM,weight_IOM_grp=refwt_IOM)%>%
group_by(sex,agemin,agemax,activity,pregnant,lactating)%>%
dplyr::summarise_all(mean)%>%
ungroup()%>%
mutate(agemax=as.numeric(agemax))%>%
mutate(agemax=if_else(is.na(agemax),150,agemax))
#nutrient requirements
IOM_nutrients <- read_excel("./Data/Clean Data/nutrient standards/IOM_requirements.xlsx",sheet="Nutrients",range = "A1:T23",col_names = TRUE)%>%
#dplyr::select(-9,-11)%>%
mutate(sex=if_else(sex=="Male",1,2),pregnant=if_else(lifestage=="Pregnancy",1,0),lactating=if_else(lifestage=="Lactation",1,0))%>%
dplyr::rename(agemin=age_lower_yrs,agemax=age_upper_yrs,calcium_rda_IOM=calcium_rda,calcium_ear_IOM=calcium_ear,
iron_rda_IOM=iron_rda,iron_ear_IOM=iron_ear,
carb_IOM_ear=carb_ear,carb_IOM_rda=carb_rda,carb_IOM_lower=carbohydrate_lower,carb_IOM_upper=carbohydrate_upper,
protein_IOM_lower=protein_lower,protein_IOM_upper=protein_upper,protein_rda_IOM=protein_rda,
fat_IOM_lower=lipids_lower,fat_IOM_upper=lipids_upper)%>%
dplyr::select(-lifestage,-refht_IOM,-refwt_IOM)
base_IOM=IOM_energy%>%
filter(agemin==19,sex==1,activity=="moderate")
base_kcal_IOM=base_IOM$kcal_IOM_grp
#join DRI energy standards with roster (calculate individual and reference requirements, everyone has activity adjustments)
w.I.roster.2015=w.I.roster.2015%>%
fuzzy_left_join(IOM_energy,by=c("sex","age"="agemin", "age"="agemax","activity","pregnant","lactating"),match_fun=list(`==`,`>=`, `<=`,`==`,`==`,`==`))%>%
dplyr::rename(sex=sex.x,activity=activity.x,pregnant=pregnant.x,lactating=lactating.x)%>%
mutate(age_grp_IOM=if_else(!is.na(agemin),paste(as.character(agemin),as.character(agemax),sep="-"),as.character(NA)))%>%
mutate(kcal_IOM_I=eer1-(eer2*age)+refPA*((eer3*weight)+(eer4*height/100))+eer5+eer6)%>%
mutate(AE_IOM_grp=kcal_IOM_grp/base_kcal_IOM,AE_IOM_I=kcal_IOM_I/base_kcal_IOM)%>%
dplyr::select(-contains(".y"),-agemin,-agemax,-refPA,-contains("eer"))
#generate individual and reference nutrient standards for IOM
w.I.roster.2015=w.I.roster.2015%>%
fuzzy_left_join(IOM_nutrients,by=c("sex","age"="agemin","age"="agemax","pregnant","lactating"), match_fun=list(`==`,`>=`, `<=`,`==`,`==`))%>%
dplyr::rename(sex=sex.x,pregnant=pregnant.x,lactating=lactating.x)%>%
mutate(protein_ear_IOM_grp=protein_ear_perkg*weight_IOM_grp,protein_ear_IOM_I=protein_ear_perkg*weight)%>%
dplyr::select(-contains(".y"),-protein_ear_perkg,-agemin,-agemax)
xlist=c("protein","carb")
ylist=c("lower","upper")
#zlist=c("grp","I")
for (x in xlist){
for (y in ylist){
# for (z in zlist){
w.I.roster.2015[[paste(x,y,"IOM_grp",sep="_")]]<-  (w.I.roster.2015[[paste(x,"IOM",y,sep="_")]]/100)*w.I.roster.2015[[paste("kcal_IOM_grp",sep="_")]]/4
#}
}
}
xlist=c("fat")
ylist=c("lower","upper")
#zlist=c("grp","I")
for (x in xlist){
for (y in ylist){
# for (z in zlist){
w.I.roster.2015[[paste(x,y,"IOM_grp",sep="_")]]<-  (w.I.roster.2015[[paste(x,"IOM",y,sep="_")]]/100)*w.I.roster.2015[[paste("kcal_IOM_grp",sep="_")]]/9
#}
}
}
w.I.roster.2015=w.I.roster.2015%>%
dplyr::select(-contains("IOM_upper"),-contains("IOM_lower"))
rm(list=ls(pattern="IOM"),x,y,z,xlist,ylist,zlist)
#reference weights and heights
ref_wtht = w.I.roster.2015%>%
dplyr::select(hhid,mid,sex,sampletype,age,contains("age_grp"),pregnant,lactating,contains("weight"),contains("height"),contains("code"),contains("R2"))
#add back HH-level variables and generate hh level variables
hh=w.I.roster.2015%>%
dplyr::select(hhid,contains("AE"),-aeu)%>%
group_by(hhid)%>%
dplyr::summarise_all(sum,na.rm=TRUE)%>%
dplyr::rename_at(.vars=vars(2:7),.funs=funs(sub("AE_","hhsize_",.)))
w.hh.roster.2015=left_join(w.hh.roster.2015,hh,by="hhid")
h=w.hh.roster.2015%>%
dplyr::select(hhid,contains("hhsize_"),contains("hh_"),AE_OECD,hhds,nofood,hungryday,hungrynight)%>%
dplyr::rename(hhsize_OECD=AE_OECD)
#task: w.I.roster.2015 does not have column named "hhsize_IOM_grp"
w.I.roster.2015=left_join(w.I.roster.2015,h,by="hhid")%>%
mutate(share_India_grp=AE_India_grp/hhsize_India_grp,share_FAO_grp=AE_FAO_grp/hhsize_FAO_grp,share_IOM_grp=AE_IOM_grp/hhsize_IOM_grp,share_FAO_I=AE_FAO_I/hhsize_FAO_I,share_IOM_I=AE_IOM_I/hhsize_IOM_I,share_FAO_age=AE_FAO_age/hhsize_FAO_age,
age_range=if_else(age>=2&age<4,"Toddler (2-3)",
if_else(age>=4&age<8,"Young Child (4-7)",
if_else(age>=8&age<11,"Older Child (8-10)",
if_else(age>=11&age<14,"Young Adolescent (11-13)",
if_else(age>=14&age<18,"Older Adolescent (14-17)",
if_else(age>=18&age<30,"Young Adult (18-29)",
if_else(age>=30&age<=60,"Adult (30-59)",
if_else(age>60,"Older Adult (60+)",as.character(NA))))))))))
rm(h,hh,i)
# select all the household having any members who are migrants(condition: v1_01 == 1)
selected_v1_male_2015 = v1_male_2015%>%filter(v1_01 == 1)%>%
select(-c(v1_01, Flag_v1))
# recode levels "No" of v1_14 from 2 to 0
selected_v1_male_2015[selected_v1_male_2015$v1_14 == 2, ]$v1_14 = 0
# the proportion of sending home remittance group by education level
selected_v1_male_2015%>%group_by(v1_07)%>%
summarise(mean(v1_14))
# the proportion of sending home remittance group by the way of the migration paid
selected_v1_male_2015%>%group_by(v1_13)%>%
summarise(mean(v1_14))
#plot(corr_13_prop_14)
# select household receiving any money from any person who does not live in your household(condition: v2_01 == 1)
selected_v2_male_2015 = v2_male_2015%>%filter(v2_01 == 1)
# create a new variable `average_remittance`
# change the shape of table by pivot longer on v2_08a:v2_08c(Which expenditure, saving,
# and investment, would have been CUT had the remittance from this source not been received?)
selected_v2_male_2015 = selected_v2_male_2015%>%
mutate(average_remittance = v2_06/v2_05)%>%
pivot_longer(cols = v2_08a:v2_08c, names_to = "v2_08",values_drop_na = TRUE)%>%
dplyr::select(-v2_08)%>%
dplyr::rename(v2_08=value)
#figure out the money mostly been cut off - interesting!(group by which expenditure would be cut off with receiving money and use count function)
# 3:health
# 4:consumption(food, cloth)
selected_v2_male_2015%>%group_by(v2_08)%>%
dplyr::summarise(n = n())
# select all the household sending money to someone who does not live in your household(condition: v3_01 == 1)
# merge v_2 and v_3
selected_v3_male_2015 = v3_male_2015%>%filter(v3_01 == 1)
v2_3_male_2015 = merge(x = v2_male_2015, y = v3_male_2015, by = "a01", all = TRUE)
# filtering the merge table to find household both sending and receiving money
# create a variable to calculate net_remittance
v2_3_male_2015_both = v2_3_male_2015%>%filter(v2_01 == 1 & v3_01 == 1)%>%
mutate(net_remittance = v2_06 - v3_06)
nrow(v2_3_male_2015_both[v2_3_male_2015_both$net_remittance<0,])
nrow(v2_3_male_2015_both[v2_3_male_2015_both$net_remittance==0,])
nrow(v2_3_male_2015_both[v2_3_male_2015_both$net_remittance>0,])
# create a new variable sum_other_income to sum up all kinds of income
selected_v4_male_2015 = v4_male_2015%>%mutate(sum_other_income = v4_01+v4_02+v4_03+v4_04+v4_05+v4_06+v4_07+v4_08+v4_09+v4_10+v4_11+v4_12)
# merge table 2 and 3 and 4
v2_3_4_male_2015 = merge(x = v2_3_male_2015, y = v4_male_2015, by = "a01", all = TRUE)
# group by i3_08(NGO help or not) to see the mean of Total quantity produced, Qty consumed, Qty sold
i3_male_2015%>%group_by(i3_08)%>%summarise(mean(i3_04),mean(i3_05), mean(i3_06),mean(i3_07))
# filtering household in I3 with NGO help(i3_08)
i3_male_2015_NGO_help = i3_male_2015%>%filter(i3_08 ==1)
nrow(i3_male_2015_NGO_help)
# create a variable  to calculate the total expenditure
selected_i4_male_2015 = i4_male_2015%>%
mutate_at(.vars = c("i4_17","i4_18","i4_19","i4_20"), funs(ifelse(is.na(.),0,.)))
selected_i4_male_2015 = selected_i4_male_2015%>%mutate(total_expenditure = i4_17+i4_18+i4_19+i4_20)
# filter all the household having any negative shocks
selected_t1_male_2015 = t1_male_2015%>%filter(t1_02a == 1)
# filter all the household having any positive events
selected_t2_male_2015 = t2_male_2015%>%filter(t2_03 == 1 )
# selected columns & pivot longer on `mmid`
selected_y6a = y6a_female_2015%>%
dplyr::select("a01", "hh_type","y6a_01","y6a_02","y6a_03", "y6a_04_1","y6a_04_2","y6a_04_3")%>%
pivot_longer(cols = y6a_04_1:y6a_04_3, names_to = "y6a_04",values_drop_na = TRUE)%>%
dplyr::select(-y6a_04)%>%
dplyr::rename(y6a_04=value)
# create a new dummy variable `clinic_access` to show whether household have access to clinic
selected_y6a$clinic_access = ifelse((selected_y6a$y6a_02 == 999), 0, 1)
# select health worker and group meeting data
# pivot longer topics discussed with health worker(y8_05) and group meeting(y8_07)
# question: pivot longer twice safe??
selected_y8 = y8_female_2015%>%
dplyr::select("a01", "hh_type","y8_01","y8_03","y8_04",contains("y8_05"),"y8_06",contains("y8_07"))%>%
pivot_longer(cols = y8_05_1:y8_05_6, names_to = "y8_05",values_drop_na = TRUE)%>%
dplyr::select(-y8_05)%>%
dplyr::rename(y8_05=value)%>%
pivot_longer(cols = y8_07_1:y8_07_6, names_to = "y8_07",values_drop_na = TRUE)%>%
dplyr::select(-y8_07)%>%
dplyr::rename(y8_07=value)
# question: what should we do to the NA values? (on quantity, reasons, etc.)
# answer and to do: code NA to zero
selected_i1 = i1_male_2015
selected_i2 = i2_male_2015
# code `without stocks` of `End of Month food grain stock paddy, December 2013 (kg)` to zero
selected_i2$i2_02_1 = ifelse((selected_i2$i2_02_1 == 99999), 0, selected_i2$i2_02_1)
# adding label to `i2_02_1`
var_label(selected_i2$i2_02_1) <- "End of Month food grain stock paddy, December 2013 (kg)"
selected_i2a = i2a_male_2015
# recode `2` to `0` in dummy variables relating to whether you use technology
selected_i5 = i5_male_2015%>%
mutate_at(.vars = c("i5_07","i5_08","i5_09","i5_10", "i5_11", "i5_12","i5_13","i5_14","i5_15","i5_16"), funs(ifelse(. == 1, 1, 0)))
selected_r01r03 = r_male_2015%>%
dplyr::select("a01", "hh_type", contains("r01"), "r03")
#pivot_longer mid(r01g & r01h) & type of items(r01n & r01o) columns without deleting the row where mid is NA
#code "2" and "NA" to 0
selected_r01r03$r01g = ifelse((selected_r01r03$r01g == 1), 1, 0)
selected_r01r03$r01g[is.na(selected_r01r03$r01g)] <- 0
#code the 1st mid column to "0" if the previous column said "0" (not applicable)
selected_r01r03$r01h = ifelse((selected_r01r03$r01g == 1), selected_r01r03$r01h,0)
selected_r01r03$r01h[is.na(selected_r01r03$r01h)] <- 0
#same procedure on r01n and r01o
selected_r01r03$r01n = ifelse((selected_r01r03$r01n == 1), 1, 0)
selected_r01r03$r01n[is.na(selected_r01r03$r01n)] <- 0
selected_r01r03$r01o = ifelse((selected_r01r03$r01n == 1), selected_r01r03$r01o,0)
selected_r01r03$r01o[is.na(selected_r01r03$r01o)] <- 0
#pivot longer mid columns
selected_r01r03 = selected_r01r03%>%
pivot_longer(cols = r01h:r01h_3, names_to = "r01h",values_drop_na = TRUE)%>%
dplyr::select(-r01h)%>%
dplyr::rename(r01h=value)%>%
pivot_longer(cols = r01o:r01o_3, names_to = "r01o",values_drop_na = TRUE)%>%
dplyr::select(-r01o)%>%
dplyr::rename(r01o=value)
#reorder columns
selected_r01r03 <- selected_r01r03[c("a01","hh_type","r01","r01a","r01b","r01c","r01d","r01e","r01f","r01g","r01h","r01i","r01j","r01k","r01l","r01m","r01n","r01o","r03")]
#set value label to the new column
var_label(selected_r01r03$r01g) <- "Is there any member/members in the hh who very rarely or does/do not use the lat"
var_label(selected_r01r03$r01h) <- "If yes, who are they?(mid)"
var_label(selected_r01r03$r01n) <- "Is there any cleansing agent at the hand wash area?"
var_label(selected_r01r03$r01o) <- "If yes, then list all the items that are there in the hand wash area."
# pivot_longer mid columns
selected_u = u_male_2015%>%
dplyr::select("a01", "hh_type","slno","u01","mid_1","mid_2","u02","u03","u04","u05","u06","u07","u09","u10","u08")%>%
pivot_longer(cols = mid_1:mid_2, names_to = "mid",values_drop_na = TRUE)%>%
dplyr::select(-mid)%>%
dplyr::rename(mid=value)
#set value label to the new column
var_label(selected_u$mid) <- "Member ID"
rm(list=ls(pattern="male"))
write.csv(w.I.roster.2015,"./rosters/w.I.roster_2015.csv",row.names=FALSE)
setwd("C:/Users/lilac2/Box/BIHS_Project")
write.csv(w.I.roster.2015,"./rosters/w.I.roster_2015.csv",row.names=FALSE)
setwd("C:/Users/lilac2/Box/BIHS_Project")
write.csv(w.I.roster.2015,"./Programs/R/rosters/w.I.roster_2015.csv",row.names=FALSE)
write.csv(w.hh.roster.2015,"./Programs/R/rosters/w.hh.roster_2015.csv",row.names=FALSE)
knitr::opts_chunk$set(echo = FALSE,root.dir='C:/Users/lilac2/Box/BIHS_Project',warning = FALSE, message=FALSE)
options(scipen=999)
set.seed(12345)
###  Check for and load Packages   ###
library(installr)
#updateR()
# ## get packages installed
# packs = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
#
# ## and now re-install install packages using install.packages()
# install.packages(packs$Package)
## Clear worksace
rm(list = ls())
gc()
#writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
## This function will check if a package is installed, and if not, install it
pkgTest  =  function(x) {
if (!require(x, character.only = TRUE))
{
install.packages(x, dep = TRUE)
if(!require(x, character.only = TRUE)) stop("Package not found")
}
}
## These lines load the required packages
packages  =  c('data.table','tidyverse','haven','stargazer','plm','lubridate','survey','psych','knitr','xtable','tables','kableExtra','fuzzyjoin','MASS','matrixcalc','car','stringr','styler','readxl','magrittr','sjmisc','readxl','srvyr','gdata','labelled')
#,) ## you can add more packages here
lapply(packages, pkgTest)
setwd("C:/Users/lilac2/Box/BIHS_Project")
w.I.roster_2015<-read.csv("./Programs/R/rosters/w.I.roster_2015.csv")
w.hh.roster_2015<-read.csv("./Programs/R/rosters/w.hh.roster_2015.csv")
options(digits=3,knitr.kable.NA = '')
setwd("C:/Users/lilac2/Box/BIHS_Project")
#compare reference weights by age group
allref=w.I.roster_2015%>%
mutate(weight_India_grp_b=if_else(weight<weight_India_grp,1,0),
weight_FAO_grp_b=if_else(weight<weight_FAO_grp,1,0),
weight_FAO_age_b=if_else(weight<weight_FAO_age,1,0),
weight_IOM_grp_b=if_else(weight<weight_IOM_grp,1,0),
height_FAO_grp_b=if_else(height<height_FAO_grp,1,0),
height_FAO_age_b=if_else(height<height_FAO_age,1,0),
height_IOM_grp_b=if_else(height<height_IOM_grp,1,0),
sex=as.factor(sex))%>%
dplyr::select(hhid,mid,age,age_range,sex,contains("weight"),contains("height"),contains("AE_"),contains("code"),contains("R2"))
w_allref=allref%>%
as_survey_design(ids=vcode, strata=dvcode,weights=popweightR2)%>%
group_by(sex,age_range)%>%
summarise_all(survey_mean,na.rm=TRUE)%>%
dplyr::select(-contains("code"),-contains("R2"),-contains("hhid"),-contains("mid"),-contains("_se"))
w=allref%>%
group_by(sex,age_range)%>%
dplyr::summarise(n=n())
w_allref=left_join(w_allref,w,by=c("sex","age_range"))
age=c("Toddler (2-3)","Young Child (4-7)","Older Child (8-10)","Young Adolescent (11-13)","Older Adolescent (14-17)",
"Young Adult (18-29)","Adult (30-59)","Older Adult (60+)")
w_allref$age_range<-reorder.factor(w_allref$age_range,new.order=age)
levels(w_allref$sex)<-list("Male"="1","Female"="2")
graph_allref=w_allref%>%
arrange(age_range)%>%
mutate_at(vars(contains("_b")),funs(.*100))%>%
pivot_longer(cols=weight:AE_IOM_I,names_to=c("variable","source","reflevel","pct"),names_sep="_",values_drop_na = TRUE)%>%
mutate(source=if_else(is.na(source),"sample",source),reflevel=if_else(is.na(reflevel),"sample",if_else(reflevel=="I","sample",reflevel)), sourceref=paste(source,reflevel,sep="_"))
x.label=c("Toddler \n (2-3)","Young Child \n (4-7)","Older Child \n (8-10)","Young Adolescent \n (11-13)","Older Adolescent \n (14-17)",
"Young Adult \n (18-29)","Adult \n (30-59)","Older Adult \n (60+)")
sr=unique(graph_allref$sourceref)
wha=c("sample_sample","India_grp","FAO_age","FAO_grp","IOM_grp","FAO_sample","IOM_sample")
lbl=c("Sample", "India (age group)","WHO (age)","WHO (age group)","IOM (age group)","WHO (sample wt/ht)","IOM (sample wt/ht)")
clr=c("black","green","blue","blue","red","blue","red")
lnt=c("dotted","solid","dashed","solid","solid","dashed","dashed")
w=ggplot()+geom_path(data=subset(graph_allref,is.na(pct)&variable=="weight"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1.5)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Weight (kg)",limits=c(0,80),breaks=seq(0,80,10),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)))+theme(legend.position=c(0.6,0.75),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
print(w)
ggsave("./Programs/R/output/2015/refweight_plot.png")
h=ggplot()+geom_path(data=subset(graph_allref,is.na(pct)&variable=="height"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1.5)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Height (cm)",limits=c(0,200),breaks=seq(0,200,20),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)))+theme(legend.position=c(0.6,0.75),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
print(h)
ggsave("./Programs/R/output/2015/refheight_plot.png")
hw=ggplot()+geom_path(data=subset(graph_allref,is.na(pct)&variable%in%c("weight","height")),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1.5)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
#scale_y_continuous(name="Height (cm)",limits=c(0,200),breaks=seq(0,200,20),expand=c(0,0))+
scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)),rows=vars(factor(variable)),scales="free_y")+theme(legend.position=c(0.6,0.75),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
a=ggplot()+geom_path(data=subset(graph_allref,is.na(pct)&variable=="AE"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1.5)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Adult Equivalents",limits=c(0,1.5),breaks=seq(0,1.5,0.1),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)))+theme(legend.position=c(0.5,0.75),legend.background=element_rect(size=0.75,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
print(a)
ggsave("./Programs/R/output/2015/AE_plot.png")
wtht_allref=w_allref%>%
arrange(age_range)%>%
mutate_at(vars(contains("_b")),funs(scales::percent(.,accuracy=.01)))%>%
dplyr::select(sex,age_range,age,weight,contains("weight_India_grp"),contains("weight_FAO_age"),contains("weight_FAO_grp"),contains("weight_IOM_grp"),height,contains("height_FAO_age"),contains("height_FAO_grp"),contains("height_IOM_grp"))
AE_allref=w_allref%>%
arrange(age_range)%>%
dplyr::select(sex,age_range,age,AE_FAO_I,AE_IOM_I,AE_FAO_age,AE_India_grp,AE_FAO_grp,AE_IOM_grp,n)
whref_print<-kable(wtht_allref,booktabs=TRUE,caption="Comparison of Reference Standards for Weight and Height",
col.names=c("Sex","Age Range","Age","Sample","Reference Group","% Below","Reference Age","% Below","Reference Group","% Below","Reference Group","% Below","Sample","Reference Age","% Below","Reference Group","% Below","Reference Group","% Below"),
escape=F)%>%
kable_styling(full_width=FALSE,"striped")%>%
add_header_above(c(" "=3," "=1,"India"=2, "WHO/FAO"=4,"IOM"=2," "=1,"WHO/FAO"=4,"IOM"=2)) %>%
add_header_above(c(" "=3,"Weight (kg) "=9, "Height (cm) "=7)) %>%
column_spec(c(1,3,12,19),border_right = TRUE)%>%
#row_spec(c(3:4,7:8,11:12),background="gray90")%>%
footnote(general="Data are population-weighted means using sample weights provided by IFPRI.
India refers to the Dietary Guidelines for India published by the National Institute of Nutrition in 2015
WHO/FAO refers to the Human Energy Requirements published by WHO/FAO in 2001
IOM refrs to the Dietary Reference Intakes published by the Institute of Medicine in 2005")
save_kable(whref_print,"./Programs/R/output/2015/refwtht.png")
print(whref_print)
AE_print<-kable(AE_allref,booktabs=TRUE,caption="Comparison of Adult Equivalents",
col.names=c("Sex","Age Range","Age","WHO/FAO","IOM","WHO/FAO","India","WHO/FAO","IOM","N"),
escape=F)%>%
kable_styling(full_width=FALSE,"striped")%>%
add_header_above(c(" "=3,"Actual Weight/Height"=2,"Age Weight/Height"=1,"Reference Group Weight/Height"=3," "=1)) %>%
add_header_above(c(" "=3,"Adult Equivalents"=6," "=1)) %>%
column_spec(c(1,3,9,10),border_right = TRUE)%>%
#row_spec(c(3:4,7:8,11:12),background="gray90")%>%
footnote(general="Data are population-weighted means using sample weights provided by IFPRI.
Adult Equivalent is equal to individual energy requirements relative to the energy requirements for an 18-30 year old male with moderate activity.
India refers to the Dietary Guidelines for India published by the National Institute of Nutrition in 2015
WHO/FAO refers to the Human Energy Requirements published by WHO/FAO in 2001
IOM refrs to the Dietary Reference Intakes published by the Institute of Medicine in 2005")
save_kable(AE_print,"./Programs/R/output/2015/AE_2015.png")
print(AE_print)
rm(allref,w,ref_wtht,a,h,w,graph_allref)
setwd("C:/Users/lilac2/Box/BIHS_Project")
nutnames=c("kcal","protein","fat","carb","calcium","iron")
#######NUTRIENTS
#allocate share of total hh nutrient to each individual and separate into nutrient-specific tables
ref=c("India_grp","FAO_grp","IOM_grp","FAO_I","IOM_I","FAO_age")
for (i in 1:length(nutnames)) {
temp=w.I.roster_2015%>%
dplyr::select(hhid,mid,sex,age,BMI,age_range,contains("share"),contains(nutnames[[i]]),hhds,dvcode,vcode,aeu,hhweightR2,popweightR2,BMI_FAO_age)%>%
arrange(hhid)
for (j in ref){
temp[[paste0("I_share_",j,sep="_",nutnames[[i]])]]<-temp[[paste0("hh_",nutnames[[i]])]]*temp[[paste0("share_",j)]]
}
assign(paste(nutnames[[i]],"inadequacy",sep="_"),temp)
}
kcal_inadequacy=kcal_inadequacy%>%
mutate(sex=as.factor(sex),BMI_inadequate_FAO_age=if_else(BMI<BMI_FAO_age,1,0),
BMI_gap_FAO_age=if_else(BMI_inadequate_FAO_age==1,(BMI-BMI_FAO_age)/BMI_FAO_age,as.numeric(NA)))%>%
group_by(hhid)%>%
mutate_at(vars(starts_with("kcal_")), funs(hh_ = "sum"))%>%
ungroup()%>%
mutate_at(.vars=vars(matches("hh_")),.funs=funs("inadequate"=if_else(hh_kcal<.,1,0)))%>%
dplyr::select(-hh_kcal_inadequate)
#ENERGY (kcal/BMI)
for (j in ref){
#actual reported consumption inadequacy
kcal_inadequacy[[paste0("actual_inadequate_",j)]]<-if_else(kcal_inadequacy$I_kcal<kcal_inadequacy[[paste0("kcal",sep="_",j)]],1,0)
kcal_inadequacy[[paste0("actual_gap_",j)]]<-if_else(kcal_inadequacy[[paste0("actual_inadequate_",j)]]==1,(kcal_inadequacy$I_kcal-kcal_inadequacy[[paste0("kcal",sep="_",j)]])/kcal_inadequacy[[paste0("kcal",sep="_",j)]],as.numeric(NA))
kcal_inadequacy[[paste0("actual_Ina.HHok_",j)]]<-if_else(kcal_inadequacy[[paste0("actual_inadequate_",j)]]==1&kcal_inadequacy[[paste0("kcal_",j,"_hh__inadequate")]]==0,1,0)
kcal_inadequacy[[paste0("actual_Iok.HHin_",j)]]<-if_else(kcal_inadequacy[[paste0("actual_inadequate_",j)]]==0&kcal_inadequacy[[paste0("kcal_",j,"_hh__inadequate")]]==1,1,0)
#share allocation inadequacy
kcal_inadequacy[[paste0("share_inadequate_",j)]]<-if_else(kcal_inadequacy[[paste0("I_share_",j,"_kcal")]]<kcal_inadequacy[[paste0("kcal",sep="_",j)]],1,0)
kcal_inadequacy[[paste0("share_gap_",j)]]<-if_else(kcal_inadequacy[[paste0("share_inadequate_",j)]]==1,(kcal_inadequacy[[paste0("I_share_",j,"_kcal")]]-kcal_inadequacy[[paste0("kcal",sep="_",j)]])/kcal_inadequacy[[paste0("kcal",sep="_",j)]],as.numeric(NA))
kcal_inadequacy[[paste0("share_Ina.HHok_",j)]]<-if_else(kcal_inadequacy[[paste0("share_inadequate_",j)]]==1&kcal_inadequacy[[paste0("kcal_",j,"_hh__inadequate")]]==0,1,0)
kcal_inadequacy[[paste0("share_Iok.HHin_",j)]]<-if_else(kcal_inadequacy[[paste0("share_inadequate_",j)]]==0&kcal_inadequacy[[paste0("kcal_",j,"_hh__inadequate")]]==1,1,0)
}
w_kcal=kcal_inadequacy%>%
as_survey_design(ids=vcode, strata=dvcode,weights=popweightR2)%>%
group_by(sex,age_range)%>%
summarise_all(survey_mean,na.rm=TRUE)%>%
dplyr::select(sex,age_range,contains("inadequate"),contains("gap"),contains("HHok"),contains("Iok"),-contains("_se"))
age=c("Toddler (2-3)","Young Child (4-7)","Older Child (8-10)","Young Adolescent (11-13)","Older Adolescent (14-17)",
"Young Adult (18-29)","Adult (30-59)","Older Adult (60+)")
w_kcal$age_range<-reorder.factor(w_kcal$age_range,new.order=age)
w_kcal[w_kcal==0]<-as.numeric(NA)
levels(w_kcal$sex)<-list("Male"="1","Female"="2")
graph_kcal_f=w_kcal%>%
arrange(age_range)%>%
dplyr::select(sex,age_range,BMI_inadequate_FAO_age,contains("actual_inadequate"),contains("share_inadequate"))%>%
mutate_at(vars(contains("inadequate")),funs(.*100))%>%
pivot_longer(cols=3:15,names_to=c("variable","sourceref"),names_sep="_inadequate_",values_drop_na = TRUE)
x.label=c("Toddler \n (2-3)","Young Child \n (4-7)","Older Child \n (8-10)","Young Adolescent \n (11-13)","Older Adolescent \n (14-17)",
"Young Adult \n (18-29)","Adult \n (30-59)","Older Adult \n (60+)")
sr=unique(graph_kcal_f$sourceref)
wha=c("India_grp","FAO_age","FAO_grp","IOM_grp","FAO_I","IOM_I") #5 for weight
lbl=c("India (age group)","WHO/FAO (age)","WHO/FAO (age group)","IOM (age group)","WHO/FAO (sample wt/ht)","IOM (sample wt/ht)")
clr=c("green","blue","blue","red","blue","red")
lnt=c("dashed","dotted","dashed","dashed","solid","solid")
kcalf_m=ggplot()+geom_path(data=subset(graph_kcal_f,sex=="Male"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+scale_y_continuous(name="Energy inadequacy % ",limits=c(0,100),breaks=seq(0,100,10),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_kcal_f$age_range),labels=x.label)+facet_grid(cols=vars(factor(variable)))+theme(legend.position=c(0.5,0.4),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
print(kcalf_m)
ggsave("./Programs/R/output/2015/kf_plot_m.png")
kcalf_w=ggplot()+geom_path(data=subset(graph_kcal_f,sex=="Female"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+ scale_y_continuous(name="Energy inadequacy % ",limits=c(0,100),breaks=seq(0,100,10),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_kcal_f$age_range),labels=x.label)+facet_grid(cols=vars(factor(variable)))+theme(legend.position=c(0.5,0.4),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
print(kcalf_w)
ggsave("./Programs/R/output/2015/kf_plot_w.png")
graph_kcal_inequality=w_kcal%>%
arrange(age_range)%>%
dplyr::select(sex,age_range,contains("Iok"),contains("Hok"))%>%
pivot_longer(cols=3:26,names_to=c("v1","v2","v3","v4"),names_sep="_",values_drop_na = FALSE)%>%
unite(v3,v4,col="sourceref",sep="_")%>%
mutate(value=value*100)
k_HHinequality=ggplot()+geom_path(data=subset(graph_kcal_inequality,v1=="actual"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+
scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Frequency (%) ",limits=c(0,50),breaks=seq(0,50,10),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_kcal_inequality$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)),rows=vars(factor(v2)))+theme(legend.position=c(0.5,0.4),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"),panel.spacing = unit(1, "lines"))
print(k_HHinequality)
ggsave("./Programs/R/output/2015/kf_HHineq.png")
fi_kcal=w_kcal%>%
arrange(age_range)%>%
mutate_at(vars(contains("gap")),funs(scales::percent(.,accuracy=.1)))%>%
mutate_at(vars(contains("inadequate")),funs(scales::percent(.,accuracy=.1)))%>%
dplyr::select(sex,age_range,starts_with("BMI_inadequate"),contains("actual_inadequate"),contains("share_inadequate"),starts_with("BMI_gap"),contains("actual_gap"),contains("share_gap"))
fi_kcal[is.na(fi_kcal)]<-""
kcal_freq=fi_kcal%>%
dplyr::select(sex,age_range,contains("inadequate"))
kcal_inten=fi_kcal%>%
dplyr::select(sex,age_range,contains("gap"))
freq_kcal_print<-kable(kcal_freq,booktabs=TRUE,caption="Frequency of Energy Inadequacy by Reference Standard",
col.names=c("Sex","Age Range","BMI",rep(list("India","FAO/WHO","IOM","FAO/WHO","IOM","FAO/WHO"),2)),
escape=F)%>%
kable_styling(full_width=FALSE,"striped","bordered")%>%
add_header_above(c(" "=2," " =1,rep(list("wrt Age Group Req"=3,"wrt Individual Req"=2,"wrt Age Req"=1),2)))%>%
add_header_above(c(" "=2," "=1,"Reported Individual Consumption"=6,"Allocated Household Consumption"=6))%>%
#add_header_above(c(" "=2,"Frequency of Inadequacy"=11))%>%
column_spec(c(2,3,9,15),border_right = TRUE)%>%
#row_spec(c(3:4,7:8,11:12),background="gray90")%>%
footnote(general="Data are population-weighted means using sample weights provided by IFPRI.
Consumption share is equal to individual Adult Equivalents/Total Household Adult Equivalents.
India refers to the Dietary Guidelines for India published by the National Institute of Nutrition in 2015
WHO/FAO refers to the Human Energy Requirements published by WHO/FAO in 2001
IOM refrs to the Dietary Reference Intakes published by the Institute of Medicine in 2005")
save_kable(freq_kcal_print,"./Programs/R/output/2015/kcal_freq.png")
print(freq_kcal_print)
inten_kcal_print<-kable(kcal_inten,booktabs=TRUE,caption="Intensity of Energy Inadequacy",
col.names=c("Sex","Age Range","BMI",rep(list("India","FAO/WHO","IOM","FAO/WHO","IOM","FAO/WHO"),2)),
escape=F)%>%
kable_styling(full_width=FALSE,"striped","bordered")%>%
add_header_above(c(" "=2," " =1,rep(list("wrt Age Group Req"=3,"wrt Individual Req"=2,"wrt Age Req"=1),2)))%>%
add_header_above(c(" "=2," "=1,"Reported Individual Consumption"=6,"Allocated Household Consumption"=6))%>%
#add_header_above(c(" "=2,"Frequency of Inadequacy"=11))%>%
column_spec(c(2,3,9,15),border_right = TRUE)%>%
#row_spec(c(3:4,7:8,11:12),background="gray90")%>%
footnote(general="Data are population-weighted means using sample weights provided by IFPRI.
Consumption share is equal to individual Adult Equivalents/Total Household Adult Equivalents.
India refers to the Dietary Guidelines for India published by the National Institute of Nutrition in 2015
WHO/FAO refers to the Human Energy Requirements published by WHO/FAO in 2001
IOM refrs to the Dietary Reference Intakes published by the Institute of Medicine in 2005")
save_kable(inten_kcal_print,"./Programs/R/output/2015/kcal_inten.png")
print(inten_kcal_print)
rm(w_kcal,kcal_inadequacy)
#protein
for (j in ref){
#actual reported consumption inadequacy
protein_inadequacy[[paste0("actual_inadequate_",j)]]<-if_else(protein_inadequacy$I_protein<protein_inadequacy[[paste0("protein",sep="_",j)]],1,0)
protein_inadequacy[[paste0("actual_gap_",j)]]<-if_else(protein_inadequacy[[paste0("actual_inadequate_",j)]]==1,(protein_inadequacy$I_protein-protein_inadequacy[[paste0("protein",sep="_",j)]])/protein_inadequacy[[paste0("protein",sep="_",j)]],as.numeric(NA))
#share allocation inadequacy
protein_inadequacy[[paste0("share_inadequate_",j)]]<-if_else(protein_inadequacy[[paste0("I_share_",j,"_protein")]]<protein_inadequacy[[paste0("protein",sep="_",j)]],1,0)
protein_inadequacy[[paste0("share_gap_",j)]]<-if_else(protein_inadequacy[[paste0("share_inadequate_",j)]]==1,(protein_inadequacy[[paste0("I_share_",j,"_protein")]]-protein_inadequacy[[paste0("protein",sep="_",j)]])/protein_inadequacy[[paste0("protein",sep="_",j)]],as.numeric(NA))
}
