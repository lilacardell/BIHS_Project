group_by(a01) %>%
dplyr::summarise(p2_03=sum(p2_03,na.rm=TRUE),p2_06=sum(p2_06,na.rm=TRUE)) %>%
mutate(nonfoodexp2_hhwk=(p2_03+p2_06)/52)
#combine all nonfood exp expenditures
nonfoodexp_2015_hh=left_join(nonfoodexp_2015_m,nonfoodexp_2015_y,by="a01") %>%
mutate(nonfoodexp_hhwk=nonfoodexp1_hhwk + nonfoodexp2_hhwk) %>%
dplyr::select(a01,nonfoodexp_hhwk)
#add food expenditures to household roster_2015
roster_2015_hh=left_join(roster_2015_hh,nonfoodexp_2015_hh,by=c("hhid"="a01")) %>%
mutate(nonfoodexp_hhwk_pc=nonfoodexp_hhwk/hhsize,
nonfoodexp_hhwk_AE_OECD=nonfoodexp_hhwk/AE_OECD)%>%
left_join(foodexp_2015_hh,by=c("hhid"="a01")) %>%
mutate(foodpurch_hhwk_pc = foodpurch_hhwk/hhsize,
foodpurch_hhwk_AE_OECD = foodpurch_hhwk/AE_OECD,
foodtot_hhwk_pc = foodtot_hhwk/hhsize,
foodtot_hhwk_AE_OECD = foodtot_hhwk/AE_OECD)%>%
mutate(foodshare=if_else(nonfoodexp_hhwk>0 & foodtot_hhwk>0,foodtot_hhwk/(foodtot_hhwk+nonfoodexp_hhwk),0),
totexp_hhwk=nonfoodexp_hhwk+foodtot_hhwk)
#dplyr::na_if(roster_2015_hh$foodshare,0) #convert zero to NA
rm(nonfoodexp_m_hh,nonfoodexp_y_hh,upazilla,villages,prices,foodexp_2015,foodexp_2015_hh,nonfoodexp_2015_hh,nonfoodexp_2015_m,nonfoodexp_2015_y,missing_exp)
foodsecurity=x3_female_2015%>%
dplyr::rename(hhid=a01,nofood_freq=x3_02,hungrynight_freq=x3_04,hungryday_freq=x3_06)%>%
mutate(nofood=if_else(x3_01==1,1,0),hungrynight=if_else(x3_03==1,1,0),hungryday=if_else(x3_05==1,1,0))%>%
mutate(cereal_days=x3_07_1+x3_07_2+x3_07_4,
tuber_days=x3_07_3,
vegetable_days=x3_07_5,
fruit_days=x3_07_6 ,
meat_days=x3_07_10+x3_07_11,
egg_days=x3_07_8,
seafood_days=x3_07_12 ,
pulse_days=x3_07_7+x3_07_16,
milk_days=x3_07_9,
fat_days=x3_07_13 ,
sugar_days=x3_07_14 ,
misc_days=x3_07_15+x3_07_17)%>%
mutate_at(.vars=vars(contains("days")),.funs=list(~as.numeric(.)))%>%
mutate_at(.vars=vars(contains("days")),.funs=list(~if_else(.>7,7,.)))%>%
mutate_at(.vars=vars(contains("days")),.funs=funs(`1`=if_else(.>0,1,0)))%>%
rename_at(.vars=vars(contains("days")),.funs=funs(sub("_days_1","",.)))%>%
dplyr::select(-contains("x"))%>%
mutate(hhds=rowSums(.[21:32],na.rm=TRUE))%>%
dplyr::select(hhid,hhds,contains("food"),contains("hungry"),-contains("freq"),-contains("seafood"))
# fx=function(x){
#   mutate(temp=if_else(x>0,1,0))
#   dplyr::rename(gsub("_days","",x)==temp)
# }
#add back to HH level roster
roster_2015_hh=left_join(roster_2015_hh,foodsecurity,by="hhid")
rm(foodsecurity)
#breakdown of assistance type (for all households)
# assistance = u_male_2015 %>%
#   filter(u01==1)
#
# assistance_count = aggregate(a01~slno, data=assistance, FUN = length)
# %>%
#   group_by(a01)%>%
#   summarise(u01_hh=n(mid_1)+n(mid_2))
### SUMMARY of all 6503 households (ie: 15 hh dropped with two spouses)
summary.hh.2015= roster_2015_hh %>%
psych::describe() %>%
as_tibble(rownames="rowname") %>%
dplyr::select(rowname,n,mean,sd)
#print(roster_2015_hh.summary,digits=3)
#setwd("C:/Users/lilac2/Box/BIHS_Project")
setwd("D:/UIUC/SP21/BIHSgit/BIHS_Project")
hh_type = aggregate(hhid~sampletype, data=roster_2015_hh, FUN = length)
#1:FTF Original 1000
#2:FTF Additional 1080
#3:National Representative 4423
#import weights
weights_2015 <- read_dta("./Data/Raw Data/bihs_2015/IFPRI_BIHS_R2_exp.dta") %>%
dplyr::select(a01,dvcode,vcode,aeu,hhweightR2,popweightR2)
#choose sample type 2 and 3, eliminate poly households
w.hh.roster.2015=left_join(roster_2015_hh,weights_2015,by=c("hhid"="a01"))%>%
filter(sampletype==2 |sampletype==3)
#%>%filter(poly==0&spouseabroad_hh==0)
#choose sample type 2 and 3, eliminate poly households & children under 1 & individuals w/out mealdata
w.I.roster.2015=left_join(roster_2015_I,weights_2015,by=c("hhid"="a01"))%>%
filter(sampletype==2 |sampletype==3)%>%
filter(I_kcal>0 & mealdata>0 &age>=2)%>%
dplyr::select(-poly,-mealdata)
#&poly==0&abroad==2&spouseabroad==0)
design_HH <- svydesign(data=w.hh.roster.2015,id=~vcode, strata=~dvcode,weights=~hhweightR2)
design_I <- svydesign(data=w.I.roster.2015,id=~vcode, strata=~dvcode,weights=~popweightR2)
# summary.w.hh.2015= w.hh.roster.2015 %>%
#   dplyr::select(hhsize,adult,child,totexp_hhwk,foodshare,hhds,contains("head"),contains("spouse"),vcode,dvcode,popweight1)%>%
#     psych::describe() %>%
#   as_tibble(rownames="rowname") %>%
#   dplyr::select(rowname,n,mean,sd)
listx = dplyr::select(w.hh.roster.2015,hhsize,adult,child,totexp_hhwk,foodshare,hhds,contains("head"),contains("spouse"),-contains("abroad"))%>%
mutate_at(.vars=vars(contains("sex")),.funs=list(~recode(.,"2=0")))%>%
mutate(maritalhead=if_else(maritalhead==2,1,0))
#-contains("sex"),-contains("marital"))
a=svymean(listx,design_HH,na.rm=TRUE)
#ab=print(ftable(a),rownames=c("Household Size","Number of Adults","Number of Children"),digits=2)
ab=as.data.table(a,keep.rownames=T)
ab$rownames<-c("Size","Number of Adults","Number of Children","Total Weekly Expenditure (2012 Taka)","Food Share of Total Expenditure","Household Dietary Diversity Score","Age (Years)","Male ","Married ","Literacy ","No Schooling ","Secondary Schooling ","Agricultural Worker ","Body Mass Index (BMI)","Reported Calorie Consumption (kcal)","Age (Years)","Male ","Literacy ","No Schooling ","Secondary Schooling ","Agricultural Worker ","Body Mass Index (BMI)","Reported Calorie Consumption (kcal)")
abc=ab%>%
dplyr::select(rownames,mean,SE)%>%
mutate(mean=if_else(mean<1,paste0(round(mean*100,2),"%"),as.character(round(mean,2))))
descriptives=kable(abc,booktabs=TRUE,digits=3,
col.names=c("Variable","Weighted Mean","SD"),escape=F)%>%
kable_styling(full_width=FALSE,bootstrap_options = "condensed")%>%
pack_rows("Household",1,6)%>%
pack_rows("Household Head",7,15)%>%
pack_rows("Spouse of Household Head",16,23)%>%
footnote(general="Data are population-weighted means and standard deviations using sample weights provided by IFPRI")
print(descriptives)
save_kable(descriptives,"./Programs/R/output/2015/outputBIHS_Projectdescriptives.png")
#a=qflextable(ab)
#write.table(ab,file="D:/UIUC/SP21/BIHSgit/BIHS_Project/Programs/R/output/descriptives.doc")
rm(listx,ab,a,abc)
#select household id and income variables(c14)
nonag_employment = c_male_2015%>%
dplyr::select("a01","c14")%>%
rename(hhid = a01, nonag_income = c14)
#create household level income from non-ag employment
nonag_employment = aggregate(nonag_employment[, 2], by=list(nonag_employment$hhid), FUN=sum, na.rm = TRUE)
#select variables of purchase price(D1_09,D2_09)and current values(D1_10,D2_10)
assets = d1_male_2015%>%
left_join(d2_male_2015, by=c("a01"))%>%
dplyr::select("a01","d1_09","d1_10","d2_09","d2_10")%>%
rename(hhid = a01, purchase_val=d1_09,curr_val=d1_10,ag_purchase_val=d2_09,ag_curr_val=d2_10)
#create household level income from non-ag employment
assets = aggregate(assets[,2:5], by=list(assets$hhid), FUN=sum, na.rm = TRUE)%>%
rename(hhid = Group.1)
savings = e_male_2015%>%
dplyr::select("a01","e01","e02","e06")%>%
rename(hhid=a01,anysaving_pastyr = e01,anysaving_curr = e02, total_saving = e06)%>%
group_by(hhid)%>%
dplyr::summarise(anysaving_pastyr=mean(anysaving_pastyr,na.rm=TRUE),anysaving_curr=mean(anysaving_curr,na.rm=TRUE),total_saving = sum(total_saving, na.rm = TRUE))
#change yes/no(1/2) to 1/0
savings[savings$anysaving_pastyr== 2, ]$anysaving_pastyr = 0
savings[savings$anysaving_curr== 2, ]$anysaving_curr = 0
loans = f_male_2015%>%
dplyr::select("a01","f01","f02","f07")%>%
rename(hhid=a01,anyloan = f01,anyloan_curr = f02, total_loan = f07)%>%
group_by(hhid)%>%
dplyr::summarise(anyloan=mean(anyloan,na.rm=TRUE),anyloan_curr=mean(anyloan_curr,na.rm=TRUE),total_loan = sum(total_loan, na.rm = TRUE))
#change yes/no(1/2) to 1/0
loans[loans$anyloan== 2, ]$anyloan = 0
loans[loans$anyloan_curr== 2, ]$anyloan_curr = 0
land = g_male_2015%>%
dplyr::select("a01","g10")%>%
rename(hhid=a01,market_val = g10)%>%
group_by(hhid)%>%
dplyr::summarise(market_val=sum(market_val,na.rm=TRUE))
ag_plot = h1_male_2015%>%
dplyr::select("a01","h1_03")%>%
rename(hhid=a01,area_planted = h1_03)%>%
group_by(hhid)%>%
dplyr::summarise(area_planted=sum(area_planted,na.rm=TRUE))
# select i1 data, drop "sample type" column that is not necessary
# code NA to zero
Ag_production = i1_male_2015%>%
dplyr::rename(hhid=a01)%>%
group_by(hhid)%>%
dplyr::summarise(agsales=sum(i1_13,na.rm=TRUE))%>%
dplyr::select(hhid,agsales)
#Goal: hh level variables for the maximum number of months of any grain stock
#first pivot longer so we each observation is a hhid-grain pair
#group by hh and summarise by creating a binary variable for each money if the hh had any grain stocks
#count the number of months for which that binary variable is greater than zero for each hh
grain_stock = i2_male_2015%>%
rename(hhid = a01)%>%
pivot_longer(cols = i2_02_1:i2_13_3,names_to = c("grain_month", "crop"),
names_pattern = "i2_?(.*)_(.*)", values_to="qty") %>%
#question: code 99999 (without stock) to zero
mutate(qty = if_else(qty<99999,qty,0))
grain_stock$grain_month = ifelse(str_detect(grain_stock$grain_month, fixed("02")),"Dec",
ifelse(str_detect(grain_stock$grain_month, fixed("03")),"Jan",
ifelse(str_detect(grain_stock$grain_month, fixed("04")),"Feb",
ifelse(str_detect(grain_stock$grain_month, fixed("05")),"Mar",
ifelse(str_detect(grain_stock$grain_month, fixed("06")),"Apr",
ifelse(str_detect(grain_stock$grain_month, fixed("07")),"May",
ifelse(str_detect(grain_stock$grain_month, fixed("08")),"Jun",
ifelse(str_detect(grain_stock$grain_month, fixed("09")),"Jul",
ifelse(str_detect(grain_stock$grain_month, fixed("10")),"Aug",
ifelse(str_detect(grain_stock$grain_month, fixed("11")),"Sep",
ifelse(str_detect(grain_stock$grain_month, fixed("12")),"Oct",
"Nov")))))))))))
grain_stock=grain_stock%>%
group_by(hhid,grain_month)%>%
dplyr::summarise(store_capacity_kg=mean(i2_14,na.rm=TRUE),tot_qty=sum(qty,na.rm=TRUE))%>%
ungroup()%>%
mutate(any_grain=if_else(tot_qty>0,1,0))%>%
group_by(hhid)%>%
dplyr::summarise(store_capacity_kg=mean(store_capacity_kg),nmo_anygrain=sum(any_grain))%>%
ungroup()
nonag_income = n_male_2015%>%
dplyr::select("a01","n05")%>%
rename(hhid=a01,profit_12mon = n05)%>%
group_by(hhid)%>%
dplyr::summarise(profit_12mon=sum(profit_12mon,na.rm=TRUE))
#select r01 and r06a columns and rename variables
#create binary variable =1 if HH had any HH-based latrine (r01=2,3,4,5)
# create binary varibale = 1 if drinking is filtered or treated (r06=1,2,3,4,6)
latrine_water = r_male_2015%>%
dplyr::select("a01", "r01", "r06a")%>%
rename(hhid = a01, latrine_type = r01, drinkwater_source = r06a)%>%
mutate(hh_lat = ifelse(latrine_type %in% c(2,3,4,5), 1,0),treated_drinkwater = ifelse(drinkwater_source %in% c(1,2,3,4,6), 1,0))%>%
dplyr::select(hhid,hh_lat,treated_drinkwater)
# filter all the household having any negative shocks
neg_shock = t1_male_2015%>%
rename(hhid = a01)%>%
group_by(hhid)%>%
dplyr::summarise(negshock_no=n(),negshock_val=sum(t1_07,na.rm=TRUE))
pos_shock = t2_male_2015%>%
filter(t2_03==1)%>%
rename(hhid = a01)%>%
group_by(hhid)%>%
dplyr::summarise(posshock_no=n(),posshock_val=sum(t2_06,na.rm=TRUE))
# select u data and rename variables
#question: what to do with u09 and u10? u09 is the Other in-kind sobsidy code, u10 is number
social_safety = u_male_2015%>%
filter(u01==1&hh_type%in%c(2,3))%>%
dplyr::rename(hhid = a01)%>%
group_by(hhid)%>%
rename(cash_received = u02)%>%
mutate(rice_val=if_else(is.finite(u03),u03*u04,as.numeric(NA)),wheat_val=if_else(is.finite(u05),u05*u06,as.numeric(NA)))%>%
dplyr::select(hhid,slno,hh_type,cash_received,rice_val,wheat_val,u07,u08)%>%
plyr::mutate(inkind_val=rowSums(.[5:8],na.rm=TRUE))%>%
group_by(hhid)%>%
dplyr::summarise(prog_ct=n(),cash_received=sum(cash_received,na.rm=TRUE),inkind_val=sum(inkind_val,na.rm=TRUE))
other_income = v4_male_2015%>%
mutate(tot_othinc=rowSums(.[3:14],na.rm=TRUE))%>%
rename(hhid = a01)%>%
dplyr::select(hhid,tot_othinc)
# selected columns
clinic_access = y6a_female_2015%>%
dplyr::select("a01", "hh_type","y6a_01","y6a_02","y6a_03")%>%
rename(hhid=a01, know_clinic = y6a_01, commute_min = y6a_02, any_usage = y6a_03)
# pivot_longer(cols = y6a_04_1:y6a_04_3, names_to = "y6a_04",values_drop_na = TRUE)%>%
# dplyr::select(-y6a_04)%>%
# dplyr::rename(y6a_04=value)
# create a new dummy variable `clinic_access` to show whether household have access to clinic
clinic_access$clinic_access = ifelse((clinic_access$commute_min == 999), 0, 1)
# select health worker and group meeting data
# Question: Do we want to code visits from last THREE month? (y8_01a- y8_04a)
CHW_visit = y8_female_2015%>%
dplyr::select("a01","y8_01","y8_02","y8_03","y8_04",contains("y8_05"),"y8_06",contains("y8_07"))%>%
rename(hhid = a01, visit_sixmo = y8_01, health_org = y8_02, num_visited_sixmo = y8_03, any_advice = y8_04, advice1 = y8_05_1,advice2 = y8_05_2,advice3 = y8_05_3,advice4 = y8_05_4, any_grpdiscuss = y8_06, discuss_topics1 = y8_07_1,discuss_topics2 = y8_07_2,discuss_topics3 = y8_07_3,discuss_topics4 = y8_07_4)
#recode all yes/no variables, so that "no" is equal to zero, as it is coded as 2 in the codebook
#Question: is it okay for 88 it is coded to zero as well (88 = don't know)(did in 2011)
CHW_visit[is.na(CHW_visit$visit_sixmo), ]$visit_sixmo = 0
CHW_visit[CHW_visit$visit_sixmo == 2, ]$visit_sixmo = 0
CHW_visit[CHW_visit$visit_sixmo == 88, ]$visit_sixmo = 0
CHW_visit[is.na(CHW_visit$num_visited_sixmo), ]$num_visited_sixmo = 0
CHW_visit[CHW_visit$num_visited_sixmo == 88, ]$num_visited_sixmo = 0
#replace the NA values first with 0
CHW_visit[is.na(CHW_visit$any_advice), ]$any_advice = 0
CHW_visit[CHW_visit$any_advice == 2, ]$any_advice = 0
#count the number of household that has visits and has advice - there are a large difference
nrow(CHW_visit[CHW_visit$visit_sixmo == 1,])
nrow(CHW_visit[CHW_visit$any_advice == 1,])
w.hh.roster.2015=w.hh.roster.2015%>%
left_join(nonag_employment,by=c("hhid"))%>%
left_join(assets,by=c("hhid"))%>%
left_join(savings,by=c("hhid"))%>%
left_join(loans,by=c("hhid"))%>%
left_join(land,by=c("hhid"))%>%
left_join(ag_plot,by=c("hhid"))%>%
left_join(Ag_production,by=c("hhid"))%>%
left_join(grain_stock,by=c("hhid"))%>%
left_join(nonag_income,by=c("hhid"))%>%
left_join(latrine_water,by=c("hhid"))%>%
left_join(neg_shock,by=c("hhid"))%>%
left_join(pos_shock,by=c("hhid"))%>%
left_join(social_safety,by=c("hhid"))%>%
left_join(other_income,by=c("hhid"))%>%
left_join(clinic_access,by=c("hhid"))%>%
left_join(CHW_visit,by=c("hhid"))%>%
w.hh.roster.2015=w.hh.roster.2015%>%
left_join(nonag_employment,by=c("hhid"))%>%
left_join(assets,by=c("hhid"))%>%
left_join(savings,by=c("hhid"))%>%
left_join(loans,by=c("hhid"))%>%
left_join(land,by=c("hhid"))%>%
left_join(ag_plot,by=c("hhid"))%>%
left_join(Ag_production,by=c("hhid"))%>%
left_join(grain_stock,by=c("hhid"))%>%
left_join(nonag_income,by=c("hhid"))%>%
left_join(latrine_water,by=c("hhid"))%>%
left_join(neg_shock,by=c("hhid"))%>%
left_join(pos_shock,by=c("hhid"))%>%
left_join(social_safety,by=c("hhid"))%>%
left_join(other_income,by=c("hhid"))%>%
left_join(clinic_access,by=c("hhid"))%>%
left_join(CHW_visit,by=c("hhid"))
rlang::last_error()
#select household id and income variables(c14)
nonag_employment = c_male_2015%>%
dplyr::select("a01","c14")%>%
rename(hhid = a01, nonag_income = c14)
#create household level income from non-ag employment
nonag_employment = aggregate(nonag_employment[, 2], by=list(nonag_employment$hhid), FUN=sum, na.rm = TRUE)%>%
rename(hhid=Group.1)
w.hh.roster.2015=w.hh.roster.2015%>%
left_join(nonag_employment,by=c("hhid"))%>%
left_join(assets,by=c("hhid"))%>%
left_join(savings,by=c("hhid"))%>%
left_join(loans,by=c("hhid"))%>%
left_join(land,by=c("hhid"))%>%
left_join(ag_plot,by=c("hhid"))%>%
left_join(Ag_production,by=c("hhid"))%>%
left_join(grain_stock,by=c("hhid"))%>%
left_join(nonag_income,by=c("hhid"))%>%
left_join(latrine_water,by=c("hhid"))%>%
left_join(neg_shock,by=c("hhid"))%>%
left_join(pos_shock,by=c("hhid"))%>%
left_join(social_safety,by=c("hhid"))%>%
left_join(other_income,by=c("hhid"))%>%
left_join(clinic_access,by=c("hhid"))%>%
left_join(CHW_visit,by=c("hhid"))
View(w.hh.roster.2015)
View(e_male_2015)
View(e_male_2015)
View(f_male_2015)
View(g_male_2015)
View(g_male_2015)
#select variables of purchase price(D1_09,D2_09)and current values(D1_10,D2_10)
assets = d1_male_2015%>%
left_join(d2_male_2015, by=c("a01"))%>%
dplyr::select("a01","d1_09","d1_10","d2_09","d2_10")%>%
rename(hhid = a01, purchase_val=d1_09,curr_val=d1_10,ag_purchase_val=d2_09,ag_curr_val=d2_10)%>%
dplyr::summarise(across(everything(), sum, na.rm = TRUE))
# task:use summarise instead
# group_by("hhid")%>%
# dplyr::summarise(purchase_val=sum(purchase_val,na.rm=TRUE)
#select household id and income variables(c14)
nonag_employment = c_male_2015%>%
dplyr::select("a01","c14")%>%
rename(hhid = a01, nonag_salary = c14)%>%
group_by(hhid)%>%
dplyr::summarise(nonag_salary = sum(nonag_salary, na.rm = TRUE))
#select household id and income variables(c14)
nonag_employment = c_male_2015%>%
dplyr::select("a01","c14")%>%
rename(hhid = a01, nonag_income = c14)%>%
group_by(hhid)%>%
dplyr::summarise(across(everything(), sum, na.rm = TRUE))
#select variables of purchase price(D1_09,D2_09)and current values(D1_10,D2_10)
assets = d1_male_2015%>%
left_join(d2_male_2015, by=c("a01"))%>%
dplyr::select("a01","d1_09","d1_10","d2_09","d2_10")%>%
rename(hhid = a01, purchase_val=d1_09,curr_val=d1_10,ag_purchase_val=d2_09,ag_curr_val=d2_10)%>%
dplyr::summarise(across(everything(), sum, na.rm = TRUE))
# task:use summarise instead
# group_by("hhid")%>%
# dplyr::summarise(purchase_val=sum(purchase_val,na.rm=TRUE)
#knitr::opts_chunk$set(echo = FALSE,root.dir='C:/Users/lilac2/Box/BIHS_Project',warning = FALSE, message=FALSE)
knitr::opts_chunk$set(echo = FALSE,root.dir='D:/UIUC/SP21/BIHSgit/BIHS_Project',warning = FALSE, message=FALSE)
options(scipen=999)
set.seed(12345)
###  Check for and load Packages   ###
library(installr)
#updateR()
# ## get packages installed
# packs = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
#
# ## and now re-install install packages using install.packages()
# install.packages(packs$Package)
## Clear worksace
rm(list = ls())
gc()
#writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
## This function will check if a package is installed, and if not, install it
pkgTest  =  function(x) {
if (!require(x, character.only = TRUE))
{
install.packages(x, dep = TRUE)
if(!require(x, character.only = TRUE)) stop("Package not found")
}
}
## These lines load the required packages
packages  =  c('data.table','tidyverse','haven','stargazer','plm','lubridate','survey','psych','knitr','xtable','tables','kableExtra','fuzzyjoin','MASS','matrixcalc','car','stringr','styler','readxl','magrittr','sjmisc','readxl','srvyr','gdata','labelled')
#,) ## you can add more packages here
lapply(packages, pkgTest)
# Read in data for project
#setwd("C:/Users/lilac2/Box/BIHS_Project")
setwd("D:/UIUC/SP21/BIHSgit/BIHS_Project")
#this pulls in all 2011 household level files except the WEAI
filenames<-grep(list.files(path="./Data//Raw Data/bihs_2011_2012/household/data"),pattern=c("weai","h"),inv=TRUE,value=TRUE)
names<-gsub(".dta","",filenames)
for(i in names){
filepath <- file.path(paste("./Data/Raw Data/bihs_2011_2012/household/data/",i,".dta",sep=""))
assign(paste(substring(i,9),"_2011",sep=""),haven::read_dta(filepath))
}
#read in the 2011 census and 2011 consumption file for now
#census_2011 = read_dta("./Raw Data/bihs_2011_2012/census/data/001_census_ftf.dta")
x1_1_f_2015 = read_dta("./Data/Raw Data/bihs_2015/household/data/064_r2_mod_x1_1_female.dta")
#import names of menu items from the 2015 codebook
#this is assumed to be more comprehensize than 2011 and also available in excel
menucodes = read_excel("./Data/Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet = "064_r2_mod_x1_1_female", range = "C31:D415",col_names = c("menuname","menu"))
#count menu items
menu_items = aggregate(a01~menu, data=x1_female_2011, FUN = length)%>%
left_join(menucodes,by=c("menu"))%>%
dplyr::rename("menucode"="menu","hh_num" = "a01")%>%
arrange(desc(hh_num))
#206 items consumed in 2011
#issue with salt not being separated into iodine/non-iodine in 2011
#menu_items = aggregate(a01~x1_05, data=x1_1_f_2015, FUN = length) #180 items consumed in 2015
#1/3 salt is regular, 2/3 iodine (return to this later)
###import names of ingredient items from 2015 (assumed to be more comprehensize than 2011)
ingredientcodes = read_excel("./Data/Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet = "064_r2_mod_x1_1_female", range = "C417:D717", col_names =c("ingredientname","ingredient"))%>%
add_row(ingredientname="Salt",ingredient=252)
occupationcodes=read_excel("./Data/Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet ="003_r2_male_mod_b1", range = "C106:D182", col_names = c("occupation_name","occupation_code"))
rm(filenames,filepath,i,names,x1_1_f_2015)
View(p1_male_2011)
View(p1_male_2011)
View(e_male_2011)
View(e_male_2011)
View(c_male_2011)
View(c_male_2011)
####select the line for your directory
#knitr::opts_chunk$set(echo = FALSE,root.dir='C:/Users/lilac2/Box/BIHS_Project ',warning = FALSE, message=FALSE)
knitr::opts_chunk$set(echo = FALSE,root.dir='D:/UIUC/SP21/BIHSgit/BIHS_Project ',warning = FALSE, message=FALSE)
options(scipen=999)
set.seed(12345)
###  Check for and load Packages   ###
#library(installr)
#updateR()
# ## get packages installed
# packs = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
#
# ## and now re-install install packages using install.packages()
# install.packages(packs$Package)
## Clear worksace
rm(list = ls())
gc()
#writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
## This function will check if a package is installed, and if not, install it
pkgTest  =  function(x) {
if (!require(x, character.only = TRUE))
{
install.packages(x, dep = TRUE)
if(!require(x, character.only = TRUE)) stop("Package not found")
}
}
## These lines load the required packages
packages  =  c('data.table','tidyverse','haven','stargazer','plm','lubridate','survey','psych','knitr','xtable','tables','kableExtra','fuzzyjoin','MASS','matrixcalc','car','stringr','styler','readxl','magrittr','sjmisc','readxl','srvyr','gdata','labelled')
#,) ## you can add more packages here
lapply(packages, pkgTest)
# Read in data for project
#setwd("C:/Users/lilac2/Box/BIHS_Project")
setwd("D:/UIUC/SP21/BIHSgit/BIHS_Project")
#this pulls in all 2015 household level files except the WEAI
filenames<-grep(list.files(path="./Data/Raw Data/bihs_2015/household/data"),pattern=c("weai","h"),inv=TRUE,value=TRUE)
names<-gsub(".dta","",filenames)
for(i in names){
filepath <- file.path(paste("./Data/Raw Data/bihs_2015/household/data/",i,".dta",sep=""))
if (i == "003_r2_male_mod_b1") {
assign(paste("b1_male_2015"),haven::read_dta(filepath))
}
assign(paste(substring(i,12),"_2015",sep=""),haven::read_dta(filepath))
}
#task(completed): inputagain "_mod_b1_2015" and rename to "b1_male_2015"
#read in the 2015 census and 2015 consumption file for now
#census_2015 = read_dta("./Raw Data/bihs_2015_2012/census/data/001_census_ftf.dta")
#x1_1_f_2015 = read_dta("./Raw Data/bihs_2015/household/data/064_r2_mod_x1_1_female.dta")
#import names of menu items from the 2015 codebook
#this is assumed to be more comprehensize than 2015 and also available in excel
menucodes = read_excel("./Data/Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet = "064_r2_mod_x1_1_female", range = "C31:D415",col_names = c("menuname","menu"))
# task - aggregate `x1_1` `x1_2`
#count menu items
# task - rename x1_05 -> menu select the first 41 columns(drop the last one)
# rename x1_2 table x1_05 ->menu
x1_female_2015 = x1_1_female_2015 %>%
dplyr::rename(menu = x1_05)%>%
select(1:41)
x1_female_2015_2 = x1_2_female_2015 %>% dplyr::rename(menu = x1_05)
# task - aggregate `x1_1` `x1_2` to `x1_female_2015`
x1_female_2015 = rbind(x1_female_2015, x1_female_2015_2)
menu_items = aggregate(a01~menu, data=x1_female_2015, FUN = length)%>%
left_join(menucodes,by=c("menu"))%>%
dplyr::rename("menucode"="menu","hh_num" = "a01")%>%
arrange(desc(hh_num))
#206 items consumed in 2015
#issue with salt not being separated into iodine/non-iodine in 2015
#menu_items = aggregate(a01~x1_05, data=x1_1_f_2015, FUN = length) #180 items consumed in 2015
#1/3 salt is regular, 2/3 iodine (return to this later)
###import names of ingredient items from 2015 (assumed to be more comprehensize than 2015)
ingredientcodes = read_excel("./Data/Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet = "064_r2_mod_x1_1_female", range = "C417:D717", col_names =c("ingredientname","ingredient"))%>%
add_row(ingredientname="Salt",ingredient=252)
occupationcodes=read_excel("./Data/Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet ="003_r2_male_mod_b1", range = "C106:D182", col_names = c("occupation_name","occupation_code"))
rm(filenames,filepath,i,names,x1_1_f_2015)
View(e_male_2015)
View(e_male_2015)
View(g_male_2015)
View(g_male_2015)
View(i5_male_2015)
View(i5_male_2015)
View(c_male_2015)
View(d1_male_2015)
View(e_male_2015)
View(g_male_2015)
View(h1_male_2015)
View(b1_male_2015)
View(b2_male_2015)
View(b2_male_2015)
View(b3_female_2015)
View(b3_female_2015)
View(b3_male_2015)
View(b3_male_2015)
View(b4_male_2015)
View(b4_male_2015)
