fuzzy_left_join(IOM_energy,by=c("sex","age"="agemin", "age"="agemax","activity","pregnant","lactating"),match_fun=list(`==`,`>=`, `<=`,`==`,`==`,`==`))%>%
dplyr::rename(sex=sex.x,activity=activity.x,pregnant=pregnant.x,lactating=lactating.x)%>%
mutate(age_grp_IOM=if_else(!is.na(agemin),paste(as.character(agemin),as.character(agemax),sep="-"),as.character(NA)))%>%
mutate(kcal_IOM_I=eer1-(eer2*age)+refPA*((eer3*weight)+(eer4*height/100))+eer5+eer6)%>%
mutate(AE_IOM_grp=kcal_IOM_grp/base_kcal_IOM,AE_IOM_I=kcal_IOM_I/base_kcal_IOM)%>%
dplyr::select(-contains(".y"),-agemin,-agemax,-refPA,-contains("eer"))
#generate individual and reference nutrient standards for IOM
w.I.roster.2011=w.I.roster.2011%>%
fuzzy_left_join(IOM_nutrients,by=c("sex","age"="agemin","age"="agemax","pregnant","lactating"), match_fun=list(`==`,`>=`, `<=`,`==`,`==`))%>%
dplyr::rename(sex=sex.x,pregnant=pregnant.x,lactating=lactating.x)%>%
mutate(protein_ear_IOM_grp=protein_ear_perkg*weight_IOM_grp,protein_ear_IOM_I=protein_ear_perkg*weight)%>%
dplyr::select(-contains(".y"),-protein_ear_perkg,-agemin,-agemax)
xlist=c("protein","carb")
ylist=c("lower","upper")
#zlist=c("grp","I")
for (x in xlist){
for (y in ylist){
# for (z in zlist){
w.I.roster.2011[[paste(x,y,"IOM_grp",sep="_")]]<-  (w.I.roster.2011[[paste(x,"IOM",y,sep="_")]]/100)*w.I.roster.2011[[paste("kcal_IOM_grp",sep="_")]]/4
#}
}
}
xlist=c("fat")
ylist=c("lower","upper")
#zlist=c("grp","I")
for (x in xlist){
for (y in ylist){
# for (z in zlist){
w.I.roster.2011[[paste(x,y,"IOM_grp",sep="_")]]<-  (w.I.roster.2011[[paste(x,"IOM",y,sep="_")]]/100)*w.I.roster.2011[[paste("kcal_IOM_grp",sep="_")]]/9
#}
}
}
w.I.roster.2011=w.I.roster.2011%>%
dplyr::select(-contains("IOM_upper"),-contains("IOM_lower"))
rm(list=ls(pattern="IOM"),x,y,z,xlist,ylist,zlist)
#reference weights and heights
ref_wtht = w.I.roster.2011%>%
dplyr::select(hhid,mid,sex,sampletype,age,contains("age_grp"),pregnant,lactating,contains("weight"),contains("height"),contains("code"),contains("R1"))
#add back HH-level variables and generate hh level variables
hh=w.I.roster.2011%>%
dplyr::select(hhid,contains("AE"),-aeu)%>%
group_by(hhid)%>%
dplyr::summarise_all(sum,na.rm=TRUE)%>%
dplyr::rename_at(.vars=vars(2:7),.funs=funs(sub("AE_","hhsize_",.)))
w.hh.roster.2011=left_join(w.hh.roster.2011,hh,by="hhid")
h=w.hh.roster.2011%>%
dplyr::select(hhid,contains("hhsize_"),contains("hh_"),AE_OECD,hhds,nofood,hungryday,hungrynight)%>%
dplyr::rename(hhsize_OECD=AE_OECD)
w.I.roster.2011=left_join(w.I.roster.2011,h,by="hhid")%>%
mutate(share_India_grp=AE_India_grp/hhsize_India_grp,share_FAO_grp=AE_FAO_grp/hhsize_FAO_grp,share_IOM_grp=AE_IOM_grp/hhsize_IOM_grp,share_FAO_I=AE_FAO_I/hhsize_FAO_I,share_IOM_I=AE_IOM_I/hhsize_IOM_I,share_FAO_age=AE_FAO_age/hhsize_FAO_age,
age_range=if_else(age>=2&age<4,"Toddler (2-3)",
if_else(age>=4&age<8,"Young Child (4-7)",
if_else(age>=8&age<11,"Older Child (8-10)",
if_else(age>=11&age<14,"Young Adolescent (11-13)",
if_else(age>=14&age<18,"Older Adolescent (14-17)",
if_else(age>=18&age<30,"Young Adult (18-29)",
if_else(age>=30&age<=60,"Adult (30-59)",
if_else(age>60,"Older Adult (60+)",as.character(NA))))))))))
rm(h,hh,i)
# ## SUMMARY TABLES FOR D&T SUBSET
# # "we restrict the sample to households with male, married heads whose spouses are present and to
# # households without pregnant or lactating women. This sample of 3,060 house-holds..." (page 631)
#
# ##DST TABLE 1
# roster_hh_DST = wroster_2011_hh %>%
#   filter(sexhead==1 & maritalhead==2 & abroadhead==0 & poly==0 & porl_hh==0 & spouseabroad_hh==0)
#
# #nrow(filter(roster_hh_DST,is.na(BMIhead))) #86 missing
# #nrow(filter(roster_hh_DST,is.na(BMIspouse))) #45 missing
#
# design_hh_DT <- svydesign(data=roster_hh_DST,id=~vcode, strata=~dvcode,weights=~hhweightR1)
#
# listx = dplyr::select(roster_hh_DST,22,53,63,66,2,19,20,6,7,8,33,37:42,43,46:51)
# a=svymean(listx,design_hh_DT,na.rm=TRUE)
# print(ftable(a),digits=2)
#
# #this is not weighted, use svymean for weighted results
# roster_hh_DST.summary = roster_hh_DST %>%
#   psych::describe() %>%
#   as_tibble(rownames="rowname") %>%
#   dplyr::select(rowname,n,mean,sd)
#
# #print(roster_hh_DST.summary,digits=3)
# #
# # table1= dplyr::bind_cols(roster_2011_hh.summary,roster_hh_DST.summary) %>%
# #   dplyr::select(-rowname1)%>%
# #   dplyr::rename(obs_full=n,mean_full=mean,sd_full=sd,obs_sample=n1,mean_sample=mean1,sd_sample=sd1) %>%
# #   dplyr::filter(rowname=="hhdaycalperAE" |rowname=="hhdayecalperAE" | rowname=="nonfoodexp_hhwkpc" | rowname=="foodpurch_hhwkpc" | rowname=="foodshare" | rowname=="hhsize" | rowname=="AE" | rowname=="boy" | rowname=="girl" | rowname=="otheradult"
# #                 | rowname=="agehead" |rowname=="lithead" |rowname=="noschoolhead" |rowname=="secondschoolhead" |rowname=="agworkhead" |rowname=="BMIhead"
# #                 | rowname=="agespouse" |rowname=="litspouse" |rowname=="noschoolspouse" |rowname=="secondschoolspouse" |rowname=="agworkspouse" |rowname=="BMIspouse")
# #
# #
# # kable(table1,booktabs=TRUE,digits=2,caption="Table 1", col.names=c("Variable","N","Mean","SD","N","Mean","SD"),align='r')%>%
# #   kable_styling(full_width=TRUE)%>%
# #   pack_rows("Household Head",8,13)%>%
# #   pack_rows("Spouse",14,19)%>%
# #   pack_rows("Expenditures",20,22)%>%
# #   add_header_above(c(" "=1,"All Households"=3,"D&T Sample"=3))
# #
#
# ###TABLE 3
# roster_I_DST=wroster_2011_I%>%
#   filter(sexhead==1 & maritalhead==2 & abroadhead==0 & poly==0 & porl_hh==0 & spouseabroad_hh==0)%>%
#   mutate(BMIunder=if_else(BMI<18.5,(18.5-BMI)/18.5,0),
#          adultgrp=if_else(relation==1,"head",if_else(relation==2,"spouse",if_else(otheradult==1,"otheradult",as.character(NA)))))%>%
#    filter(!is.na(agegrp_DST),!is.na(BMI),!is.na(adultgrp))%>%
#   dplyr::select(hhid,mid,agegrp_DST,adultgrp,BMI,BMIunder,vcode,dvcode,popweightR1)
#
# #%>%
#  # reshape2::cast(agegrp~adultgrp,fun.aggregate=c(mean,sd,n))
#
# #roster_I_DST$DST[is.na(roster_I_DST$DST)]<-0 #convert zero to NA
# design_I_DT <- svydesign(data=roster_I_DST,id=~vcode, strata=~dvcode,weights=~popweightR1)
#
# table3= roster_I_DST %>%
#   group_by(agegrp_DST,adultgrp) %>%
#   summarise(mean=mean(BMIunder),se=sd(BMIunder)/sqrt(length(BMIunder)),n=n())%>%
#   reshape2::melt(id.vars=c("agegrp_DST","adultgrp"),measure.var=c("mean","se","n"))%>%
#   dplyr::arrange(agegrp_DST)%>%
#   unite(agegrp_DST,variable,col="agegrp_DST_var",sep="_")%>%
#   dcast(agegrp_DST_var~adultgrp,value.var = "value")%>%
#   separate(agegrp_DST_var,into=c("agegrp_DST","var"),"_")%>%
#   dplyr::select(var,head,spouse,otheradult)
# #
# #
# # kable(table3,booktabs=TRUE,digits=3,caption="Table 3: BMI Shortfalls", col.names=c("","Heads","Spouses","Other Adults"),align='r')%>%
# #   kable_styling(full_width=TRUE)%>%
# #   pack_rows("Ages 20-39",1,3)%>%
# #   pack_rows("Ages 40-59",4,6)%>%
# #   pack_rows("Ages 60 and up",7,9)
#
# #%>%
#  # add_header_above(c(" "=1,"All Households"=3,"D&T Sample"=3))
names(w.I.roster.2011)
names(temp)
setwd("/Users/juli/Desktop/BIHS/master/BIHS_Project/Programs/R/output")
#######NUTRIENTS
#allocate share of total hh nutrient to each individual and separate into nutrient-specific tables
ref=c("India_grp","FAO_grp","IOM_grp","FAO_I","IOM_I","FAO_age")
for (i in 1:length(nutnames)) {
temp=w.I.roster.2011%>%
dplyr::select(1:4,BMI,age_range,contains("share"),contains(nutnames[[i]]),hhds,34:38,BMI_FAO_age)%>%
arrange(hhid)
for (j in ref){
temp[[paste0("I_share_",j,sep="_",nutnames[[i]])]]<-temp[[paste0("hh_",nutnames[[i]])]]*temp[[paste0("share_",j)]]
}
assign(paste(nutnames[[i]],"inadequacy",sep="_"),temp)
}
kcal_inadequacy=kcal_inadequacy%>%
mutate( sex=as.factor(sex),BMI_inadequate_FAO_age=if_else(BMI<BMI_FAO_age,1,0),
BMI_gap_FAO_age=if_else(BMI_inadequate_FAO_age==1,(BMI-BMI_FAO_age)/BMI_FAO_age,as.numeric(NA)))%>%
group_by(hhid)%>%
mutate_at(vars(starts_with("kcal_")), funs(hh_ = "sum"))%>%
ungroup()%>%
mutate_at(.vars=vars(matches("hh_")),.funs=funs("inadequate"=if_else(hh_kcal<.,1,0)))%>%
dplyr::select(-hh_kcal_inadequate)
#ENERGY (kcal/BMI)
for (j in ref){
#actual reported consumption inadequacy
kcal_inadequacy[[paste0("actual_inadequate_",j)]]<-if_else(kcal_inadequacy$I_kcal<kcal_inadequacy[[paste0("kcal",sep="_",j)]],1,0)
kcal_inadequacy[[paste0("actual_gap_",j)]]<-if_else(kcal_inadequacy[[paste0("actual_inadequate_",j)]]==1,(kcal_inadequacy$I_kcal-kcal_inadequacy[[paste0("kcal",sep="_",j)]])/kcal_inadequacy[[paste0("kcal",sep="_",j)]],as.numeric(NA))
kcal_inadequacy[[paste0("actual_Ina.HHok_",j)]]<-if_else(kcal_inadequacy[[paste0("actual_inadequate_",j)]]==1&kcal_inadequacy[[paste0("kcal_",j,"_hh__inadequate")]]==0,1,0)
kcal_inadequacy[[paste0("actual_Iok.HHin_",j)]]<-if_else(kcal_inadequacy[[paste0("actual_inadequate_",j)]]==0&kcal_inadequacy[[paste0("kcal_",j,"_hh__inadequate")]]==1,1,0)
#share allocation inadequacy
kcal_inadequacy[[paste0("share_inadequate_",j)]]<-if_else(kcal_inadequacy[[paste0("I_share_",j,"_kcal")]]<kcal_inadequacy[[paste0("kcal",sep="_",j)]],1,0)
kcal_inadequacy[[paste0("share_gap_",j)]]<-if_else(kcal_inadequacy[[paste0("share_inadequate_",j)]]==1,(kcal_inadequacy[[paste0("I_share_",j,"_kcal")]]-kcal_inadequacy[[paste0("kcal",sep="_",j)]])/kcal_inadequacy[[paste0("kcal",sep="_",j)]],as.numeric(NA))
kcal_inadequacy[[paste0("share_Ina.HHok_",j)]]<-if_else(kcal_inadequacy[[paste0("share_inadequate_",j)]]==1&kcal_inadequacy[[paste0("kcal_",j,"_hh__inadequate")]]==0,1,0)
kcal_inadequacy[[paste0("share_Iok.HHin_",j)]]<-if_else(kcal_inadequacy[[paste0("share_inadequate_",j)]]==0&kcal_inadequacy[[paste0("kcal_",j,"_hh__inadequate")]]==1,1,0)
}
w_kcal=kcal_inadequacy%>%
as_survey_design(ids=vcode, strata=dvcode,weights=popweightR1)%>%
group_by(sex,age_range)%>%
summarise_all(survey_mean,na.rm=TRUE)%>%
dplyr::select(sex,age_range,contains("inadequate"),contains("gap"),contains("HHok"),contains("Iok"),-contains("_se"))
age=c("Toddler (2-3)","Young Child (4-7)","Older Child (8-10)","Young Adolescent (11-13)","Older Adolescent (14-17)",
"Young Adult (18-29)","Adult (30-59)","Older Adult (60+)")
w_kcal$age_range<-reorder.factor(w_kcal$age_range,new.order=age)
w_kcal[w_kcal==0]<-as.numeric(NA)
levels(w_kcal$sex)<-list("Male"="1","Female"="2")
graph_kcal_f=w_kcal%>%
arrange(age_range)%>%
dplyr::select(1:2,BMI_inadequate_FAO_age,contains("actual_inadequate"),contains("share_inadequate"))%>%
mutate_at(vars(contains("inadequate")),funs(.*100))%>%
pivot_longer(cols=3:15,names_to=c("variable","sourceref"),names_sep="_inadequate_",values_drop_na = TRUE)
x.label=c("Toddler \n (2-3)","Young Child \n (4-7)","Older Child \n (8-10)","Young Adolescent \n (11-13)","Older Adolescent \n (14-17)",
"Young Adult \n (18-29)","Adult \n (30-59)","Older Adult \n (60+)")
sr=unique(graph_kcal_f$sourceref)
wha=c("India_grp","FAO_age","FAO_grp","IOM_grp","FAO_I","IOM_I") #5 for weight
lbl=c("India (age group)","WHO/FAO (age)","WHO/FAO (age group)","IOM (age group)","WHO/FAO (sample wt/ht)","IOM (sample wt/ht)")
clr=c("green","blue","blue","red","blue","red")
lnt=c("dashed","dotted","dashed","dashed","solid","solid")
kcalf_m=ggplot()+geom_path(data=subset(graph_kcal_f,sex==1),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Energy inadequacy % ",limits=c(0,100),breaks=seq(0,100,10),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(variable)))+theme(legend.position=c(0.5,0.4),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
#print(kcalf_m)
ggsave("kf_plot_m.png")
kcalf_w=ggplot()+geom_path(data=subset(graph_kcal_f,sex==2),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Energy inadequacy % ",limits=c(0,100),breaks=seq(0,100,10),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(variable)))+theme(legend.position=c(0.5,0.4),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
#print(kcalf_w)
ggsave("kf_plot_w.png")
graph_kcal_inequality=w_kcal%>%
arrange(age_range)%>%
dplyr::select(1:2,contains("Iok"),contains("Hok"))%>%
pivot_longer(cols=3:26,names_to=c("v1","v2","v3","v4"),names_sep="_",values_drop_na = FALSE)%>%
unite(v3,v4,col="sourceref",sep="_")%>%
mutate(value=value*100)
k_inequality=ggplot()+geom_path(data=subset(graph_kcal_inequality,v1=="actual"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+
scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Frequency (%) ",limits=c(0,50),breaks=seq(0,50,10),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)),rows=vars(factor(v2)))+theme(legend.position=c(0.5,0.4),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"),panel.spacing = unit(1, "lines"))
#print(k_HHinequality)
ggsave("kf_HHineq.png")
options(digits=3,knitr.kable.NA = '')
setwd("/Users/juli/Desktop/BIHS/master/BIHS_Project/Programs/R/output")
#compare reference weights by age group
allref=w.I.roster.2011%>%
mutate(weight_India_grp_b=if_else(weight<weight_India_grp,1,0),
weight_FAO_grp_b=if_else(weight<weight_FAO_grp,1,0),
weight_FAO_age_b=if_else(weight<weight_FAO_age,1,0),
weight_IOM_grp_b=if_else(weight<weight_IOM_grp,1,0),
height_FAO_grp_b=if_else(height<height_FAO_grp,1,0),
height_FAO_age_b=if_else(height<height_FAO_age,1,0),
height_IOM_grp_b=if_else(height<height_IOM_grp,1,0),
sex=as.factor(sex))%>%
dplyr::select(hhid,mid,age,age_range,sex,contains("weight"),contains("height"),contains("AE_"),contains("code"),contains("R1"))
w_allref=allref%>%
as_survey_design(ids=vcode, strata=dvcode,weights=popweightR1)%>%
group_by(sex,age_range)%>%
summarise_all(survey_mean,na.rm=TRUE)%>%
dplyr::select(-contains("code"),-contains("R1"),-contains("hhid"),-contains("mid"),-contains("_se"))
w=allref%>%
group_by(sex,age_range)%>%
dplyr::summarise(n=n())
w_allref=left_join(w_allref,w,by=c("sex","age_range"))
age=c("Toddler (2-3)","Young Child (4-7)","Older Child (8-10)","Young Adolescent (11-13)","Older Adolescent (14-17)",
"Young Adult (18-29)","Adult (30-59)","Older Adult (60+)")
w_allref$age_range<-reorder.factor(w_allref$age_range,new.order=age)
levels(w_allref$sex)<-list("Male"="1","Female"="2")
graph_allref=w_allref%>%
arrange(age_range)%>%
mutate_at(vars(contains("_b")),funs(.*100))%>%
pivot_longer(cols=weight:AE_IOM_I,names_to=c("variable","source","reflevel","pct"),names_sep="_",values_drop_na = TRUE)%>%
mutate(source=if_else(is.na(source),"sample",source),reflevel=if_else(is.na(reflevel),"sample",if_else(reflevel=="I","sample",reflevel)), sourceref=paste(source,reflevel,sep="_"))
x.label=c("Toddler \n (2-3)","Young Child \n (4-7)","Older Child \n (8-10)","Young Adolescent \n (11-13)","Older Adolescent \n (14-17)",
"Young Adult \n (18-29)","Adult \n (30-59)","Older Adult \n (60+)")
sr=unique(graph_allref$sourceref)
wha=c("sample_sample","India_grp","FAO_age","FAO_grp","IOM_grp","FAO_sample","IOM_sample")
lbl=c("Sample", "India (age group)","WHO (age)","WHO (age group)","IOM (age group)","WHO (sample wt/ht)","IOM (sample wt/ht)")
clr=c("black","green","blue","blue","red","blue","red")
lnt=c("dotted","solid","dashed","solid","solid","dashed","dashed")
w=ggplot()+geom_path(data=subset(graph_allref,is.na(pct)&variable=="weight"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1.5)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Weight (kg)",limits=c(0,80),breaks=seq(0,80,10),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)))+theme(legend.position=c(0.6,0.75),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
print(w)
ggsave("refweight_plot.png")
h=ggplot()+geom_path(data=subset(graph_allref,is.na(pct)&variable=="height"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1.5)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Height (cm)",limits=c(0,200),breaks=seq(0,200,20),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)))+theme(legend.position=c(0.6,0.75),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
print(h)
ggsave("refheight_plot.png")
hw=ggplot()+geom_path(data=subset(graph_allref,is.na(pct)&variable%in%c("weight","height")),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1.5)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
#scale_y_continuous(name="Height (cm)",limits=c(0,200),breaks=seq(0,200,20),expand=c(0,0))+
scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)),rows=vars(factor(variable)),scales="free_y")+theme(legend.position=c(0.6,0.75),legend.background=element_rect(size=0.5,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
a=ggplot()+geom_path(data=subset(graph_allref,is.na(pct)&variable=="AE"),aes(x=factor(age_range),y=value,group=sourceref,color=sourceref,linetype=sourceref),size=1.5)+scale_color_manual(breaks=wha,values=clr,name="Reference Source and Level",labels=lbl)+scale_linetype_manual(breaks=wha,values=lnt,labels=lbl,name="Reference Source and Level")+
scale_y_continuous(name="Adult Equivalents",limits=c(0,1.5),breaks=seq(0,1.5,0.1),expand=c(0,0))+scale_x_discrete(name="Age Group",breaks=unique(graph_allref$age_range),labels=x.label)+facet_grid(cols=vars(factor(sex)))+theme(legend.position=c(0.5,0.75),legend.background=element_rect(size=0.75,color="black"),panel.background = element_blank(),axis.line = element_line(color="black"))
print(a)
ggsave("AE_plot.png")
wtht_allref=w_allref%>%
arrange(age_range)%>%
mutate_at(vars(contains("_b")),funs(scales::percent(.,accuracy=.01)))
dplyr::select(sex,age_range,age,weight,contains("weight_India_grp"),contains("weight_FAO_age"),contains("weight_FAO_grp"),contains("weight_IOM_grp"),height,contains("height_FAO_age"),contains("height_FAO_grp"),contains("height_IOM_grp"))
knitr::opts_chunk$set(echo = FALSE,root.dir='C:/Users/lilac2/Box/BIHS_Project',warning = FALSE, message=FALSE)
options(scipen=999)
set.seed(12345)
###  Check for and load Packages   ###
library(installr)
knitr::opts_chunk$set(echo = FALSE,root.dir='/Users/juli/Desktop/BIHS/master/BIHS_Project',warning = FALSE, message=FALSE)
options(scipen=999)
set.seed(12345)
###  Check for and load Packages   ###
#library(installr)
#updateR()
# ## get packages installed
# packs = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
#
# ## and now re-install install packages using install.packages()
# install.packages(packs$Package)
## Clear worksace
rm(list = ls())
gc()
#writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
## This function will check if a package is installed, and if not, install it
pkgTest  =  function(x) {
if (!require(x, character.only = TRUE))
{
install.packages(x, dep = TRUE)
if(!require(x, character.only = TRUE)) stop("Package not found")
}
}
## These lines load the required packages
packages  =  c('data.table','tidyverse','haven','stargazer','plm','lubridate','survey','psych','knitr','xtable','tables','kableExtra','fuzzyjoin','MASS','matrixcalc','car','stringr','styler','readxl','magrittr','sjmisc','readxl','srvyr','gdata','labelled')
#,) ## you can add more packages here
lapply(packages, pkgTest)
# Read in data for project
setwd("/Users/juli/Desktop/BIHS/master/BIHS_Project/Data")
#this pulls in all 2011 household level files except the WEAI
filenames<-grep(list.files(path="./Raw Data/bihs_2011_2012/household/data"),pattern=c("weai","h"),inv=TRUE,value=TRUE)
names<-gsub(".dta","",filenames)
for(i in names){
filepath <- file.path(paste("./Raw Data/bihs_2011_2012/household/data/",i,".dta",sep=""))
assign(paste(substring(i,9),"_2011",sep=""),haven::read_dta(filepath))
}
#read in the 2011 census and 2015 consumption file for now
#census_2011 = read_dta("./Raw Data/bihs_2011_2012/census/data/001_census_ftf.dta")
x1_1_f_2015 = read_dta("./Raw Data/bihs_2015/household/data/064_r2_mod_x1_1_female.dta")
#import names of menu items from the 2015 codebook
#this is assumed to be more comprehensize than 2011 and also available in excel
menucodes = read_excel("./Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet = "064_r2_mod_x1_1_female", range = "C31:D415",col_names = c("menuname","menu"))
#count menu items
menu_items = aggregate(a01~menu, data=x1_female_2011, FUN = length)%>%
left_join(menucodes,by=c("menu"))%>%
dplyr::rename("menucode"="menu","hh_num" = "a01")%>%
arrange(desc(hh_num))
#206 items consumed in 2011
#issue with salt not being separated into iodine/non-iodine in 2011
#menu_items = aggregate(a01~x1_05, data=x1_1_f_2015, FUN = length) #180 items consumed in 2015
#1/3 salt is regular, 2/3 iodine (return to this later)
###import names of ingredient items from 2015 (assumed to be more comprehensize than 2011)
ingredientcodes = read_excel("./Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet = "064_r2_mod_x1_1_female", range = "C417:D717", col_names =c("ingredientname","ingredient"))%>%
add_row(ingredientname="Salt",ingredient=252)
occupationcodes=read_excel("./Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet ="003_r2_male_mod_b1", range = "C106:D182", col_names = c("occupation_name","occupation_code"))
rm(filenames,filepath,i,names,x1_1_f_2015)
setwd("/Users/juli/Desktop/BIHS/master/BIHS_Project/Data/Clean Data/nutrient tables")
###Import nutrition data
FCT_Bangladesh =read_excel("./FCDB_7_4_14_LC.xlsx",sheet = "UserDB_Main_table")%>%
dplyr::select(2,3,8,11:13,16,17)%>%
dplyr::rename(name=2,kcal=3,protein=4,fat=5,carb=6,calcium=7,iron=8)%>%
filter(!is.na(BIHS_code))%>%
mutate_at(vars(1,3:8),as.numeric,na.omit=TRUE)
FCT_India=read_excel("./ifct2017_compositions.xlsx",sheet = "Data")%>%
dplyr::select(1,3,enerc,protcnt,fatce,choavldf,ca,fe)%>%
dplyr::rename(kj=3,protein=4,fat=5,carb=6,calcium=7,iron=8)%>%
filter(!is.na(BIHS_code))%>%
mutate_at(vars(1,3:8),as.numeric,na.omit=TRUE)%>%
mutate(kcal=kj/4.184)%>%
dplyr::select(BIHS_code,name,kcal,protein,fat,carb,calcium,iron)
#FCT_B=anti_join(FCT_Bangladesh,FCT_India,by=c("BIHS_code"))%>%
#  mutate_at(vars(1,3:8),as.numeric,na.omit=TRUE)
FCT_all=bind_rows(FCT_India,FCT_Bangladesh)%>%
arrange(BIHS_code)%>%
dplyr::select(-name)%>%
group_by(BIHS_code)%>%
dplyr::summarise_all(max)
nutrients = left_join(ingredientcodes,FCT_all,by=c("ingredient"="BIHS_code"))
rm(FCT_Bangladesh,FCT_India,FCT_all)
#join recipe dataset with menucodes to include menu names
x1_f_2011_m = left_join(x1_female_2011,menucodes,by=c("menu"))%>%
mutate(date=as_date(paste(x1_yy, x1_mm, x1_dd,sep="-")))%>%
dplyr::rename(rid=x1_rid,time=x1_03,menucode=menu,foodsource=x1_02,menucookwt=cwgt)%>%
dplyr::select(1,41,6,43,8,7,9,42,12,contains("x1_07"),contains("x1_08"))%>%
filter(!menucode %in% c(252,2521,2522))
#rename variables with ingredient codes and weights to help with reshaping dataset
names(x1_f_2011_m)<-gsub("x1_07","icode",names(x1_f_2011_m))
names(x1_f_2011_m)<-gsub("x1_08","iweight",names(x1_f_2011_m))
names(x1_f_2011_m)<-gsub("_0","_",names(x1_f_2011_m))
#reshape the recipe dataset to join it with the nutrient dataset
#edit codes ingredients which have two BIHS codes, but are the same thing
nutnames=names(dplyr::select(nutrients,3:8))
recipes=melt(setDT(x1_f_2011_m),measure.vars=patterns("icode","iweight"),variable.name="inumber",value.name=c("icode","iweight"))%>%
arrange(a01,date,time,menucode)%>%
filter(is.finite(icode))%>%
mutate_at(.vars=vars(contains("code")),.funs=list(~recode(.,"14=10;90=80;93=92;95=94;103=157;107=998;108=157;110=157;112=157;115=157;126=123;185=215;187=186;188=189;193=181;204=179;211=179;212=999;217=222;218=226;227=2287;229=228;233=232;235=213;237=189;238=189;243=242;246=999;247=999;253=999;256=999;257=999;261=260;267=162;269=999;305=3121;310=309;311=3121;314=999;905=998;908=189;902=997;909=213;1323=132;1421=142;1422=142;2521=252;2522=252;2886=2885;2876=2873;2896=2894;2781=278;2782=278")))%>%
mutate_at(.vars=vars(contains("code")),.funs=list(~as.numeric(.)))%>%
left_join(nutrients,by=c("icode"="ingredient"))
#library(plyr)
# mutate(across(c("menucode","icode"),~as.numeric(.)))%>%
# mutate(across(c("menucode","icode"),~plyr::revalue(.,c("14"="10","90"="80","93=92","95=94","103=157","107=998","108=157","110=157","112=157","115=157","126=123","185=215","187=186","188=189","193=181","204=179","211=195","212=999","217=222","218=226","227=2287","229=228","233=232","235=213","237=189","238=189","243=242","246=999","247=999","253=999","256=999","257=999","261=260","267=162","269=999","305=312","310=309","311=312","314=999","905=998","908=189","902=997","909=213","1323=132","1421=142","1422=142","2521=252","2522=252","2886=2885","2876=2873","2896=2894","2781=278","2782=278"))))%>%left_join(nutrients,by=c("icode"="ingredient"))
#calculate the specific per gram nutrient input of each ingredient: nutrient_c = (ingredient weight in grams x nutrientval per 100g)/100
for (x in nutnames){
recipes[[paste(x,"c",sep="_")]]<-recipes[[x]]*recipes$iweight/100
}
#investigate ingredients that are missing nutrient info
missing = recipes[is.na(recipes$kcal),]
missing_ingredients = aggregate(a01~icode+ingredientname, data=missing, FUN = length) %>%
arrange(desc(a01))
#sum nutrients over meal
recipe_sum=recipes%>%
group_by(a01,sample_type,rid,date,time,foodsource,menucode,menuname,menucookwt)%>%
dplyr::summarise_at(vars(iweight,contains("_c")),sum,na.rm=TRUE)%>%
dplyr::rename_at(.vars=vars(contains("_c")),.funs=funs(sub("_c","",.)))
#find the median and 5% and 95% percentile per gram nutrient info for each meal
p <- c(.05,.5,.95)
p_names <- paste0(p*100, "%")
p_funs <- map(p, ~partial(quantile, probs = .x, na.rm = TRUE)) %>%
set_names(nm = p_names)
recipe_med=recipe_sum%>%
mutate(across(kcal:iron,~./iweight,na.rm=TRUE))%>%
filter(kcal>0)%>%
group_by(menucode)%>%
dplyr::summarise(across(kcal:iron,p_funs))
#add the median per gram nutrient info back into the recipe set and replace missing items with median and winsorize at 5%
recipe_hh=left_join(recipe_sum,recipe_med,by=c("menucode"))
for (x in nutnames){
recipe_hh[[x]]=if_else(recipe_hh[[x]]==0|is.nan(recipe_hh[[x]])|is.na(recipe_hh[[x]]),recipe_hh[[paste(x,"50%",sep="_")]]*recipe_hh$iweight,
if_else(recipe_hh[[x]]>recipe_hh[[paste(x,"95%",sep="_")]],recipe_hh[[paste(x,"95%",sep="_")]]*recipe_hh$iweight,
if_else(recipe_hh[[x]]<recipe_hh[[paste(x,"5%",sep="_")]],recipe_hh[[paste(x,"5%",sep="_")]]*recipe_hh$iweight,
recipe_hh[[x]])))
}
recipe_hh=recipe_hh%>%
dplyr::select(1:16)%>%
dplyr::rename_at(.vars=vars(10:16),.funs=funs(paste("sum",.,sep="_")))
#investigate recipes that are still missing nutrient info
missing = recipe_hh[is.na(recipe_hh$sum_kcal),]
missing_recipes = aggregate(a01~menucode+menuname, data=missing, FUN = length) %>%
arrange(desc(a01))
#rematch again for recipes that are actually ingredients
recipe_hh=left_join(recipe_hh,nutrients,by=c("menucode"="ingredient"))
for (x in nutnames){
recipe_hh[[paste("sum",x,sep="_")]]=if_else(recipe_hh[[paste("sum",x,sep="_")]]==0|is.na(recipe_hh[[paste("sum",x,sep="_")]]),
recipe_hh[[x]]*recipe_hh$sum_iweight, recipe_hh[[paste("sum",x,sep="_")]])
}
#check again for missing
#investigate recipes that are still missing nutrient info
missing = recipe_hh[is.na(recipe_hh$sum_kcal),]
missing_recipes = aggregate(a01~menucode+menuname, data=missing, FUN = length) %>%
arrange(desc(a01))
rm(recipe_med,recipe_sum,recipes,menucodes,nutrients,missing,x1_female_2011,x1_f_2011_m,x,menu_items,ingredientcodes,missing_ingredients,missing_recipes,p,p_funs,p_names)
#integrate with individual consumption data set and create individual calorie consumption
# #flag for individuals without consumption data
# datacheck = x2_f_2011  %>%
#   group_by(a01,x2_01) %>%
#   summarise(mealdata = n())%>%
#   filter(x2_01<100)%>%
#   dplyr::rename(mid=x2_01)
#join individual reported consumption with recipe nutrition information, and calculate individual nutrient consumption per meal item
recipe_I = left_join(x2_female_2011,recipe_hh,by=c("a01","x2_meal"="time","x2_08"="menucode"))%>%
dplyr::rename(meal_time=x2_meal,mid=x2_01,mealtaken=x2_03,sex_guest=x2_04,age_guest=x2_05,type_guest=x2_06,menucode=x2_08,icookwt=x2_09,ilocale=x2_11,iorder=x2_12,
sample=sample_type.x)%>%
mutate(i_mealkcal=(icookwt/menucookwt)*sum_kcal,i_mealprotein=(icookwt/menucookwt)*sum_protein,i_mealfat=(icookwt/menucookwt)*sum_fat,
i_mealcarb=(icookwt/menucookwt)*sum_carb,i_mealcalcium=(icookwt/menucookwt)*sum_calcium,i_mealiron=(icookwt/menucookwt)*sum_iron)%>%
dplyr::select(-sample_type.y,-contains("sum_"))
nutrition_2011_I = recipe_I%>%
group_by(a01, mid) %>%
filter(mealtaken==1)%>% #filter out if meal not taken
dplyr::summarise(mealdata=n(),I_kcal=sum(i_mealkcal,na.rm=TRUE),I_protein=sum(i_mealprotein,na.rm=TRUE),I_fat=sum(i_mealfat,na.rm=TRUE),
I_carb=sum(i_mealcarb,na.rm=TRUE),I_calcium=sum(i_mealcalcium,na.rm=TRUE),I_iron=sum(i_mealiron,na.rm=TRUE))%>%
filter(mid<100) #filter out guests
nrow(filter(nutrition_2011_I,I_kcal==0|is.na(I_kcal))) #89 without calorie info
rm(recipe_I,recipe_hh)
#There are multiple data sets to corroborate:
# HH reports food purchase/produced/gifted within the last 7 days on o1_female
# HH reports food group consumption over last 7 days on x3_female
# HH reports consumption over prior 24 hours on x1_female
#sevenday_items_o1 = aggregate(a01~o1_01, data=o1_female_2011, FUN = length) #295 items
#sevenday_groups_x3 =
#oneday_items_x1 =
adult_2011=w1_female_2011%>%
mutate(BMI=w1_03/((w1_04/100)^2))%>%
mutate(BMI=na_if(BMI,0),pregnant=if_else(is.na(w1_01)|w1_01==2,0,1),lactating=if_else(is.na(w1_02)|w1_02==2,0,1))%>%
dplyr::rename(weight=w1_03,height=w1_04)%>%
dplyr::select(-starts_with("w1_"))
child_2011=w2_female_2011%>%
mutate(BMI=w2_07/((w2_08/100)^2))%>%
dplyr::rename(weight=w2_07,height=w2_08)%>%
dplyr::select(a01,mid,weight,height,sample_type,BMI)%>%
mutate(pregnant=0,lactating=0)
anthro_2011_I=bind_rows(adult_2011,child_2011)
# dupe=anthro_2011_I%>%
#   group_by(a01,mid,sample_type)%>%
#   filter(n()>1)
rm(adult_2011,child_2011)
setwd("/Users/juli/Desktop/BIHS/master/BIHS_Project/Data/")
###CREATE INDIVIDUAL ROSTER###
#add BMI and nutrition consumption to individual roster_2011
roster_2011_I=left_join(b1_male_2011,anthro_2011_I,by=c("a01","mid","sample_type")) %>%
dplyr::rename(hhid=a01,sex=b1_01,age=b1_02,relation=b1_03,marital=b1_04,abroad=b1_05,literacy=b1_07,
education=b1_08,occupation=b1_10,sampletype=sample_type) %>%
left_join(nutrition_2011_I,by=c("hhid"="a01","mid"))
nrow(filter(roster_2011_I,is.na(mealdata))) #1158 are missing mealdata
roster_2011_I$mealdata[is.na(roster_2011_I$mealdata)] <- 0
roster_2011_I$pregnant[is.na(roster_2011_I$pregnant)] <- 0
roster_2011_I$lactating[is.na(roster_2011_I$lactating)] <- 0
nrow(filter(roster_2011_I,is.na(BMI))) #1724 are missing BMI
occupation_type = aggregate(mid~occupation, data=roster_2011_I, FUN = length) %>%
dplyr::rename(n_I=mid)%>%
left_join(occupationcodes,by=c("occupation"="occupation_code")) %>%
mutate(activity=if_else(occupation %in% c(1:8,10,15,22,30,54,64:71),"heavy",
if_else(occupation %in% c(11,23:27,29,31:37,54:63),"moderate",
"light")))%>%
dplyr::select(1,3,2,4)
#write.xlsx(occupation_type,"./Clean Data/occupations/occupation_category.xlsx")
#detach("package:plyr", unload = TRUE)
# add back activity level, count number of household members, and flag polygamous HH
roster_2011_I = roster_2011_I %>%
left_join(occupation_type,by="occupation")%>%
dplyr::select(-n_I,-occupation_name)%>%
#filter(!relation %in% c(16)) %>%
group_by(hhid)%>%
mutate(hhsize=n(),
boy=if_else(age<18 & sex==1,1,0),
girl=if_else(age<18 & sex==2,1,0),
man=if_else(age>=18 & sex==1,1,0),
woman=if_else(age>=18 & sex==2,1,0),
adult=if_else(boy==0 & girl==0,1,0),
child=if_else(man==0 & woman==0,1,0),
otheradult=ifelse(relation>2 & adult==1,1,0),
porl=if_else(pregnant==1 | lactating==1,1,0),
spouseabroad=if_else(abroad==1 & relation==2,1,0))%>%
ungroup()%>%
group_by(hhid,relation)%>%
mutate(poly=if_else(n()>1 & relation==2,1,0)) %>%
ungroup()%>%
dplyr::select(-contains("b1"))
