w.hh.roster.2011=left_join(roster_2011_hh,weights_2011,by=c("hhid"="a01"))%>%
filter(sampletype==2 |sampletype==3)
#%>%filter(poly==0&spouseabroad_hh==0)
#choose sample type 2 and 3, eliminate poly households & children under 1 & individuals w/out mealdata
w.I.roster.2011=left_join(roster_2011_I,weights_2011,by=c("hhid"="a01"))%>%
filter(sampletype==2 |sampletype==3)%>%
filter(I_kcal>0 & mealdata>0 &age>=2)%>%
dplyr::select(-poly,-mealdata)
#&poly==0&abroad==2&spouseabroad==0)
design_HH <- svydesign(data=w.hh.roster.2011,id=~vcode, strata=~dvcode,weights=~hhweightR1)
design_I <- svydesign(data=w.I.roster.2011,id=~vcode, strata=~dvcode,weights=~popweightR1)
# summary.w.hh.2011= w.hh.roster.2011 %>%
#   dplyr::select(hhsize,adult,child,totexp_hhwk,foodshare,hhds,contains("head"),contains("spouse"),vcode,dvcode,popweight1)%>%
#     psych::describe() %>%
#   as_tibble(rownames="rowname") %>%
#   dplyr::select(rowname,n,mean,sd)
listx = dplyr::select(w.hh.roster.2011,hhsize,adult,child,totexp_hhwk,foodshare,hhds,contains("head"),contains("spouse"),-contains("abroad"))%>%
mutate_at(.vars=vars(contains("sex")),.funs=list(~recode(.,"2=0")))%>%
mutate(maritalhead=if_else(maritalhead==2,1,0))
#-contains("sex"),-contains("marital"))
a=svymean(listx,design_HH,na.rm=TRUE)
#ab=print(ftable(a),rownames=c("Household Size","Number of Adults","Number of Children"),digits=2)
ab=as.data.table(a,keep.rownames=T)
ab$rownames<-c("Size","Number of Adults","Number of Children","Total Weekly Expenditure (2012 Taka)","Food Share of Total Expenditure","Household Dietary Diversity Score","Age (Years)","Male ","Married ","Literacy ","No Schooling ","Secondary Schooling ","Agricultural Worker ","Body Mass Index (BMI)","Reported Calorie Consumption (kcal)","Age (Years)","Male ","Literacy ","No Schooling ","Secondary Schooling ","Agricultural Worker ","Body Mass Index (BMI)","Reported Calorie Consumption (kcal)")
abc=ab%>%
dplyr::select(rownames,mean,SE)%>%
mutate(mean=if_else(mean<1,paste0(round(mean*100,2),"%"),as.character(round(mean,2))))
setwd("D:/SP21/BIHSgit/BIHS_Project")
descriptives=kable(abc,booktabs=TRUE,digits=3,
col.names=c("Variable","Weighted Mean","SD"),escape=F)%>%
kable_styling(full_width=FALSE,bootstrap_options = "condensed")%>%
pack_rows("Household",1,6)%>%
pack_rows("Household Head",7,15)%>%
pack_rows("Spouse of Household Head",16,23)%>%
footnote(general="Data are population-weighted means and standard deviations using sample weights provided by IFPRI")
print(descriptives)
save_kable(descriptives,"./Programs/R/output/2011/BIHS_Projectdescriptives.png")
#a=qflextable(ab)
#write.table(ab,file="D:/SP21/BIHSgit/BIHS_Project/Programs/R/output/descriptives.doc")
rm(listx,ab,a,abc)
setwd("D:/SP21/BIHSgit/BIHS_Project")
#INDIA requirements and AE
#read in adult equivalent from India
AE_India <-read_excel("./Data/Clean Data/nutrient standards/GuidelinesIndia_2011.xlsx",sheet="AE_India",range = "A1:D13",col_types =  "numeric")
#join AE
w.I.roster.2011=fuzzy_left_join(w.I.roster.2011,AE_India,
by=c("age"="agemin", "age"="agemax"),
match_fun=list(`>=`, `<=`))%>%
mutate(AE_India_grp=if_else(sex==1,AE_male,if_else(sex==2 & porl==1,1.17,AE_female)))%>%
dplyr::select(-(39:42))
#India Dietary requirements
India_RDA<-read_excel("./Data/Clean Data/nutrient standards/GuidelinesIndia_2011.xlsx",sheet="India_RDA",range = "A1:k19",col_names = TRUE)%>%
mutate(sex=if_else(sex=="male",1,2),agemin=as.numeric(agemin),agemax=as.numeric(agemax),
activity=if_else(is.na(activity),"moderate",activity))%>%
dplyr::select(-1)
#join India requirements (all are using ref weight and height, and assume moderate activity for under 18 p66 Inida (2009))
w.I.roster.2011=w.I.roster.2011%>%
mutate(activityI=if_else(age>=18,activity,"moderate"))%>%
fuzzy_left_join(India_RDA,
by=c("sex","activityI"="activity","age"="agemin", "age"="agemax"),
match_fun=list(`==`,`==`,`>=`, `<=`))%>%
dplyr::rename(activity=activity.x,sex=sex.x,weight_India_grp=refwt_India)%>%
mutate(age_grp_India=if_else(!is.na(agemin),paste(as.character(agemin),as.character(agemax),sep="-"),as.character(NA)),
kcal_India_grp=if_else(pregnant==1,kcal_India+350,if_else(lactating==1,kcal_India+560,kcal_India))
,protein_rda_India=if_else(pregnant==1,protein_rda_India+23,if_else(lactating==1,protein_rda_India+16,protein_rda_India)),
#calcium_rda_India=if_else(porl==1,1200,calcium_rda_India),
#iron_rda_India=if_else(porl==1,21,iron_rda_India)
)%>%
dplyr::select(-contains(".y"),-agemin,-agemax,-calcium_rda_India,-iron_rda_India,-kcal_India)
rm(list=ls(pattern="India"))
setwd("D:/SP21/BIHSgit/BIHS_Project")
#FAO weight height
hfa_girls_24 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="hfa_girls_25",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=2)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("h",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("h_P"))%>%
filter(year%in%(2:4))%>%
mutate(h_med=h_P50)
wfa_girls_24 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="wfa_girls_05",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=2)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("w",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("w_P"))%>%
filter(year%in%(2:4))%>%
mutate(w_med=w_P50)
girls_24=left_join(hfa_girls_24,wfa_girls_24,by=c("sex","year","month"))
hfa_girls_519 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="hfa_girls_519",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=2)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("h",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("h_P"))%>%
mutate(h_med=h_P50)
wfa_girls_510 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="wfa_girls_510",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=2)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("w",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("w_P"))%>%
mutate(w_med=w_P50)
bmi_girls_519 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="bmi_girls_519",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=2)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("b",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("b_P"))%>%
mutate(b_med=b_P50)
girls_519=left_join(hfa_girls_519,wfa_girls_510,by=c("sex","year","month"))%>%
left_join(bmi_girls_519,by=c("sex","year","month"))%>%
mutate(w_med=if_else(is.na(w_med),b_med*(h_med/100)^2,w_med))
girls=bind_rows(girls_24,girls_519)
girls_19=girls%>%
filter(year==19)%>%
dplyr::select(contains("med"))
women_20=tibble(year=seq(20,120,1),sex=2,h_med=girls_19$h_med,w_med=girls_19$w_med)
FAO_women=bind_rows(girls,women_20)%>%
mutate(w_med=if_else(is.na(w_med)&year<19,b_med*(h_med/100)^2,w_med))%>%
group_by(sex,year)%>%
dplyr::summarise(across(everything(),median,na.rm=TRUE))%>%
dplyr::select(-month)%>%
mutate(pregnant=0,lactating=0)
FAO_women_med=FAO_women%>%
dplyr::select(sex,year,contains("_med"),pregnant,lactating)
for(i in 14:50){
x=FAO_women_med%>%
filter(year==i)%>%
mutate(pregnant=1,b_med=as.numeric(NA),w_med=w_med+13.25)
y=FAO_women_med%>%
filter(year==i)%>%
mutate(lactating=1)
FAO_women_med=rbind(FAO_women_med,x,y)
}
rm(list=ls(pattern="girls"),women_20,x,y)
hfa_boys_24 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="hfa_boys_25",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=1)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("h",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("h_P"))%>%
filter(year%in%(2:4))%>%
mutate(h_med=h_P50)
wfa_boys_24 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="wfa_boys_05",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=1)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("w",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("w_P"))%>%
filter(year%in%(2:4))%>%
mutate(w_med=w_P50)
boys_24=left_join(hfa_boys_24,wfa_boys_24,by=c("sex","year","month"))
hfa_boys_519 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="hfa_boys_519",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=1)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("h",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("h_P"))%>%
mutate(h_med=h_P50)
wfa_boys_510 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="wfa_boys_510",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=1)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("w",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("w_P"))%>%
mutate(w_med=w_P50)
bmi_boys_519 <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="bmi_boys_519",col_names = TRUE)%>%
mutate(year=floor(Month/12),month=Month-year*12,sex=1)%>%
dplyr::rename_at(.vars=vars(contains("P")),.funs=funs(paste("b",.,sep="_")))%>%
dplyr::select(sex,year,month,contains("b_P"))%>%
mutate(b_med=b_P50)
boys_519=left_join(hfa_boys_519,wfa_boys_510,by=c("sex","year","month"))%>%
left_join(bmi_boys_519,by=c("sex","year","month"))%>%
mutate(w_med=if_else(is.na(w_med),b_med*(h_med/100)^2,w_med))
boys=bind_rows(boys_24,boys_519)
boys_19=boys%>%
filter(year==19)%>%
dplyr::select(contains("med"))
men_20=tibble(year=seq(20,120,1),sex=1,h_med=boys_19$h_med,w_med=boys_19$w_med)
FAO_men=bind_rows(boys,men_20)%>%
mutate(w_med=if_else(is.na(w_med)&year<19,b_med*(h_med/100)^2,w_med))%>%
group_by(sex,year)%>%
dplyr::summarise(across(everything(),median,na.rm=TRUE))%>%
dplyr::select(-month)%>%
mutate(pregnant=0,lactating=0)
FAO_men_med=FAO_men%>%
dplyr::select(sex,year,contains("_med"),pregnant,lactating)
rm(list=ls(pattern="boys"),men_20)
FAO_hwb=bind_rows(FAO_women,FAO_men)
FAO_hwb_med=bind_rows(FAO_women_med,FAO_men_med)%>%
mutate(age_grp_FAO=as.factor(if_else(year%in%(4:8),"4-8",if_else(year%in%(9:13),"9-13",if_else(year%in%(14:18),"14-18",if_else(year%in%(19:30),"19-30",if_else(year%in%(31:50),"31-50",if_else(year%in%(51:69),"51-69",if_else(year>=70,"70 and over",as.character(year))))))))))%>%
dplyr::rename(age=year)%>%
group_by(sex,age_grp_FAO)%>%
dplyr::mutate(h_FAO_grp=median(h_med),w_FAO_grp=median(w_med))%>%
dplyr::rename(h_FAO=h_med,w_FAO=w_med,b_FAO=b_med)%>%
ungroup()
rm(list=ls(pattern="men"))
#read in energy requirement formulas
FAO_adult <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="Adult_BMRPAL",range = "A1:M37",col_names = TRUE)%>%
dplyr::select(1:6,9:11,13)%>%
mutate(sex=if_else(sex=="Male",1,2))%>%
filter(agemin>=18)
FAO_child <- read_excel("./Data/Clean Data/nutrient standards/WHOFAO_requirements_2011.xlsx",sheet="Child_TEEPAL",range = "A1:P97",col_names = TRUE)%>%
mutate(sex=if_else(sex=="Male",1,2))%>%
dplyr::select(1:6,11,13,14,16)
FAO=bind_rows(FAO_adult,FAO_child)
FAO_energy=FAO_hwb_med%>%
fuzzy_left_join(FAO,by=c("sex"="sex","age"="agemin","age"="agemax"),match_fun=list(`==`,`>=`,`<`))%>%
dplyr::rename(sex=sex.x)%>%
dplyr::select(-sex.y,-agemin,-agemax)%>%
mutate(protein_FAO_age=if_else(pregnant==1,protein_FAO_perkg*w_FAO+14,
if_else(lactating==1,protein_FAO_perkg*w_FAO+15.75,
protein_FAO_perkg*w_FAO)),
kcal_FAO_age=if_else(pregnant==1,multiplier*(kc+kc1*w_FAO+kc2*(w_FAO^2)+E_disp)+285,
if_else(lactating==1,multiplier*(kc+kc1*w_FAO+kc2*(w_FAO^2)+E_disp)+485,
multiplier*(kc+kc1*w_FAO+kc2*(w_FAO^2)+E_disp))),
kcal_FAO_grp=if_else(pregnant==1,multiplier*(kc+kc1*w_FAO_grp+kc2*(w_FAO_grp^2)+E_disp)+285,
if_else(lactating==1,multiplier*(kc+kc1*w_FAO_grp+kc2*(w_FAO_grp^2)+E_disp)+485,
multiplier*(kc+kc1*w_FAO_grp+kc2*(w_FAO_grp^2)+E_disp))))%>%
dplyr::rename(weight_FAO_age=w_FAO,height_FAO_age=h_FAO,weight_FAO_grp=w_FAO_grp,height_FAO_grp=h_FAO_grp,BMI_FAO_age=b_FAO)
base_FAO=FAO_energy%>%
filter(age==18,sex==1,activity=="moderate")
base_kcal_FAO=base_FAO$kcal_FAO_age
#join FAO standards with roster
#calculate energy and protein requirements using reference and individual weights, activity adjustments for everyone
w.I.roster.2011=w.I.roster.2011%>%
mutate(sex=as.numeric(sex))%>%
left_join(FAO_energy,by=c("sex","age","activity","pregnant","lactating"))%>%
mutate(kcal_FAO_I=if_else(pregnant==1,multiplier*(kc+kc1*weight+kc2*(weight^2)+E_disp)+285,
if_else(lactating==1,multiplier*(kc+kc1*weight+kc2*(weight^2)+E_disp)+485,
multiplier*(kc+kc1*weight+kc2*(weight^2)+E_disp))),
AE_FAO_I=kcal_FAO_I/base_kcal_FAO,AE_FAO_age=kcal_FAO_age/base_kcal_FAO,AE_FAO_grp=kcal_FAO_grp/base_kcal_FAO,
BMI_FAO_age=if_else(age>18,21.5,BMI_FAO_age))%>%
dplyr::select(-(kc:multiplier))
rm(list=ls(pattern="FAO"))
setwd("D:/SP21/BIHSgit/BIHS_Project")
#DRI standards
#energy requirements
IOM_energy <- read_excel("./Data/Clean Data/nutrient standards/IOM_requirements.xlsx",sheet="Energy_IOM",range = "A1:R97",col_names = TRUE)%>%
mutate(sex=if_else(sex=="Male",1,2),activity=revalue(PA_level,c("sedentary"="light","low active"="light","active"="moderate","very active"="heavy")),pregnant=if_else(lifestage=="Pregnancy",1,0),lactating=if_else(lifestage=="Lactation",1,0))%>%
dplyr::select(-1,-2,-PA_level,-age_refmean,-EER_eq)%>%
dplyr::rename(agemin=age_lower_yrs,agemax=age_upper_yrs,kcal_IOM_grp=EER_IOM_ref,height_IOM_grp=refht_IOM,weight_IOM_grp=refwt_IOM)%>%
group_by(sex,agemin,agemax,activity,pregnant,lactating)%>%
dplyr::summarise_all(mean)%>%
ungroup()%>%
mutate(agemax=as.numeric(agemax))%>%
mutate(agemax=if_else(is.na(agemax),150,agemax))
# Import w.I.roster.2011 data that has been previously saved
library(foreign)
w.I.roster.2011 <- read.dta("D:/SP21/BIHSgit/BIHS_Project/Data/Output/w.hh.roster.2011.dta")
# Import w.hh.roster.2011 data that has been previously saved
library(foreign)
w.hh.roster.2011 <- read.dta("D:/SP21/BIHSgit/BIHS_Project/Data/Output/w.hh.roster.2011.dta")
# merge selected variables with w.hh.roster.2011
roster.hh.2011.with.var <- w.hh.roster.2011%>%
left_join(Ag_production,by=c("hhid"))%>%
left_join(grain_stock,by=c("hhid"))%>%
left_join(latrine_water,by=c("hhid"))%>%
left_join(CHW_visit,by=c("hhid"))%>%
left_join(social_safety,by=c("hhid"))
View(roster.2011.with.var)
# Import w.hh.roster.2011 data that has been previously saved
library(foreign)
w.hh.roster.2011 <- read.dta("D:/SP21/BIHSgit/BIHS_Project/Data/Output/w.hh.roster.2011.dta")
# merge selected variables with w.hh.roster.2011
roster.hh.2011.with.var <- w.hh.roster.2011%>%
merge(Ag_production,by=c("hhid"))%>%
merge(grain_stock,by=c("hhid"))%>%
merge(latrine_water,by=c("hhid"))%>%
merge(CHW_visit,by=c("hhid"))%>%
merge(social_safety,by=c("hhid"))
View(roster.hh.2011.with.var)
# Import w.hh.roster.2011 data that has been previously saved
library(foreign)
w.hh.roster.2011 <- read.dta("D:/SP21/BIHSgit/BIHS_Project/Data/Output/w.hh.roster.2011.dta")
# merge selected variables with w.hh.roster.2011
roster.hh.2011.with.var = w.hh.roster.2011%>%
left_join(Ag_production,by=c("hhid"))%>%
left_join(grain_stock,by=c("hhid"))%>%
left_join(latrine_water,by=c("hhid"))%>%
left_join(CHW_visit,by=c("hhid"))%>%
left_join(social_safety,by=c("hhid"))
View(roster.hh.2011.with.var)
# Import w.hh.roster.2011 data that has been previously saved
library(foreign)
w.hh.roster.2011 <- read.dta("D:/SP21/BIHSgit/BIHS_Project/Data/Output/w.hh.roster.2011.dta")
# merge selected variables with w.hh.roster.2011
roster.hh.2011.with.var = left_join(x= w.hh.roster.2011, y = Ag_production, by = "hhid")
# roster.hh.2011.with.var = w.hh.roster.2011%>%
#   left_join(Ag_production,by=c("hhid"))%>%
#   left_join(grain_stock,by=c("hhid"))%>%
#   left_join(latrine_water,by=c("hhid"))%>%
#   left_join(CHW_visit,by=c("hhid"))%>%
#   left_join(social_safety,by=c("hhid"))
View(roster.hh.2011.with.var)
View(roster.hh.2011.with.var)
# Import w.hh.roster.2011 data that has been previously saved
library(foreign)
w.hh.roster.2011 <- read.dta("D:/SP21/BIHSgit/BIHS_Project/Data/Output/w.hh.roster.2011.dta")
# merge selected variables with w.hh.roster.2011
roster.hh.2011.with.var = merge(x= w.hh.roster.2011, y = Ag_production, by = "hhid")
# roster.hh.2011.with.var = w.hh.roster.2011%>%
#   left_join(Ag_production,by=c("hhid"))%>%
#   left_join(grain_stock,by=c("hhid"))%>%
#   left_join(latrine_water,by=c("hhid"))%>%
#   left_join(CHW_visit,by=c("hhid"))%>%
#   left_join(social_safety,by=c("hhid"))
View(roster.hh.2011.with.var)
names(w.hh.roster.2011)
names(Ag_production)
names(roster.hh.2011.with.var)
View(roster.hh.2011.with.var)
# Import w.hh.roster.2011 data that has been previously saved
library(foreign)
w.hh.roster.2011 <- read.dta("D:/SP21/BIHSgit/BIHS_Project/Data/Output/w.hh.roster.2011.dta")
# merge selected variables with w.hh.roster.2011
#
# roster.hh.2011.with.var = merge(x= w.hh.roster.2011, y = Ag_production, by = "hhid")
roster.hh.2011.with.var = w.hh.roster.2011%>%
left_join(Ag_production,by=c("hhid"))%>%
left_join(grain_stock,by=c("hhid"))%>%
left_join(latrine_water,by=c("hhid"))%>%
left_join(CHW_visit,by=c("hhid"))%>%
left_join(social_safety,by=c("hhid"))
names(roster.hh.2011.with.var)
# select household receiving any money from any person who does not live in your household(condition: v2_01 == 1)
remittance_in = v2_male_2011%>%
rename(hhid = a01, receiving_remittance = v2_01, relationship_with_remitter = v2_02,  remitter_zila_code = v2_03, remitter_country_code = v2_04, receiving_times = v2_05, receiving_amount = v2_06, the_way_remittance_sent = v2_07, expenditure_cut_without_receiving = v2_08, senter_putting_condition = v2_09, items = v2_10)%>%
select(-flag)%>%
filter(receiving_remittance == 1)
# Read in data for project
setwd("D:/SP21/BIHSgit/BIHS_Project")
#this pulls in all 2011 household level files except the WEAI
filenames<-grep(list.files(path="./Data//Raw Data/bihs_2011_2012/household/data"),pattern=c("weai","h"),inv=TRUE,value=TRUE)
names<-gsub(".dta","",filenames)
for(i in names){
filepath <- file.path(paste("./Data/Raw Data/bihs_2011_2012/household/data/",i,".dta",sep=""))
assign(paste(substring(i,9),"_2011",sep=""),haven::read_dta(filepath))
}
#read in the 2011 census and 2015 consumption file for now
#census_2011 = read_dta("./Raw Data/bihs_2011_2012/census/data/001_census_ftf.dta")
x1_1_f_2015 = read_dta("./Data/Raw Data/bihs_2015/household/data/064_r2_mod_x1_1_female.dta")
#import names of menu items from the 2015 codebook
#this is assumed to be more comprehensize than 2011 and also available in excel
menucodes = read_excel("./Data/Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet = "064_r2_mod_x1_1_female", range = "C31:D415",col_names = c("menuname","menu"))
#count menu items
menu_items = aggregate(a01~menu, data=x1_female_2011, FUN = length)%>%
left_join(menucodes,by=c("menu"))%>%
dplyr::rename("menucode"="menu","hh_num" = "a01")%>%
arrange(desc(hh_num))
#206 items consumed in 2011
#issue with salt not being separated into iodine/non-iodine in 2011
#menu_items = aggregate(a01~x1_05, data=x1_1_f_2015, FUN = length) #180 items consumed in 2015
#1/3 salt is regular, 2/3 iodine (return to this later)
###import names of ingredient items from 2015 (assumed to be more comprehensize than 2011)
ingredientcodes = read_excel("./Data/Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet = "064_r2_mod_x1_1_female", range = "C417:D717", col_names =c("ingredientname","ingredient"))%>%
add_row(ingredientname="Salt",ingredient=252)
occupationcodes=read_excel("./Data/Raw Data/bihs_2015/household/documents/000_codebook.xls",
sheet ="003_r2_male_mod_b1", range = "C106:D182", col_names = c("occupation_name","occupation_code"))
rm(filenames,filepath,i,names,x1_1_f_2015)
# select household receiving any money from any person who does not live in your household(condition: v2_01 == 1)
remittance_in = v2_male_2011%>%
rename(hhid = a01, receiving_remittance = v2_01, relationship_with_remitter = v2_02,  remitter_zila_code = v2_03, remitter_country_code = v2_04, receiving_times = v2_05, receiving_amount = v2_06, the_way_remittance_sent = v2_07, expenditure_cut_without_receiving = v2_08, senter_putting_condition = v2_09, items = v2_10)%>%
select(-flag)%>%
filter(receiving_remittance == 1)
# create a new variable `average_remittance`
# change the shape of table by pivot longer on v2_08a:v2_08c(Which expenditure, saving,
# and investment, would have been CUT had the remittance from this source not been received?)
remittance_in = remittance_in%>%
mutate(average_remittance = receiving_amount/receiving_times)
#figure out the money mostly been cut off - interesting!(group by which expenditure would be cut off with receiving money and use count function)
# 3:health
# 4:consumption(food, cloth)
remittance_in%>%group_by(expenditure_cut_without_receiving)%>%
summarise(n = n())
View(remittance_in)
# select all the household sending money to someone who does not live in your household(condition: v3_01 == 1)
# merge v_2 and v_3
remittance_out = v3_male_2011%>%
rename(hhid = a01, sending_remittance = v3_01, relationship_with_recipient = v3_02, recipient_zila_code = v3_03, recipient_country_code = v3_04, sending_times = v3_05, sending_amount = v3_06, the_way_remittance_sent = v3_07)%>%filter( sending_remittance == 1)
v2_3_male_2011 = merge(x = remittance_in, y = remittance_out, by = "hhid", all = TRUE)
# filtering the merge table to find household both sending and receiving money
# create a variable to calculate net_remittance
v2_3_male_2011_both = v2_3_male_2011%>%filter(receiving_remittance == 1 & sending_remittance == 1)%>%
mutate(net_remittance = receiving_amount - sending_amount)
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance<0,])
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance==0,])
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance>0,])
View(remittance_out)
# filtering the merge table to find household both sending and receiving money
# create a variable to calculate net_remittance
remittance = v2_3_male_2011%>%filter(receiving_remittance == 1 & sending_remittance == 1)%>%
mutate(net_remittance = receiving_amount - sending_amount)
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance<0,])
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance==0,])
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance>0,])
# rename all the variables
# create a new variable sum_other_income to sum up all kinds of income
other_income = v4_male_2011
other_income[is.na(other_income)] = 0
other_income = other_income%>%mutate(sum_other_income = v4_01+v4_02+v4_03+v4_04+v4_05+v4_06+v4_07+v4_08+v4_09+v4_10+v4_11+v4_12)%>%
rename(hhid = a01, land_rent = v4_01, other_rent = v4_02, insurance = v4_03, profits_dividends = v4_04, gratuity_seperation_payment_retire_benefit = v4_05, lottery_prize_cash = v4_06, lottery_prize_kind = v4_07, charity_assistance_cash = v4_08, charity_assistance_kind = v4_09, interest = v4_10, other_cash_receipts = v4_11, other_in_kind_receipts = v4_12, other_assests = v4_13)
# merge table 2 and 3 and 4
v2_3_4_male_2011 = merge(x = v2_3_male_2011, y = other_income, by = "hhid", all = TRUE)
# merge table 2 and 3 and 4
remmitance_otherIncome = merge(x = v2_3_male_2011, y = other_income, by = "hhid")
# select all the household sending money to someone who does not live in your household(condition: v3_01 == 1)
# merge v_2 and v_3
remittance_out = v3_male_2011%>%
rename(hhid = a01, sending_remittance = v3_01, relationship_with_recipient = v3_02, recipient_zila_code = v3_03, recipient_country_code = v3_04, sending_times = v3_05, sending_amount = v3_06, the_way_remittance_sent = v3_07)%>%filter( sending_remittance == 1)
v2_3_male_2011 = merge(x = remittance_in, y = remittance_out, by = "hhid")
# filtering the merge table to find household both sending and receiving money
# create a variable to calculate net_remittance
remittance = v2_3_male_2011%>%filter(receiving_remittance == 1 & sending_remittance == 1)%>%
mutate(net_remittance = receiving_amount - sending_amount)
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance<0,])
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance==0,])
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance>0,])
# rename all the variables
# create a new variable sum_other_income to sum up all kinds of income
other_income = v4_male_2011
other_income[is.na(other_income)] = 0
other_income = other_income%>%mutate(sum_other_income = v4_01+v4_02+v4_03+v4_04+v4_05+v4_06+v4_07+v4_08+v4_09+v4_10+v4_11+v4_12)%>%
rename(hhid = a01, land_rent = v4_01, other_rent = v4_02, insurance = v4_03, profits_dividends = v4_04, gratuity_seperation_payment_retire_benefit = v4_05, lottery_prize_cash = v4_06, lottery_prize_kind = v4_07, charity_assistance_cash = v4_08, charity_assistance_kind = v4_09, interest = v4_10, other_cash_receipts = v4_11, other_in_kind_receipts = v4_12, other_assests = v4_13)
# rename all the variables
# create a new variable sum_other_income to sum up all kinds of income
other_income = v4_male_2011
other_income[is.na(other_income)] = 0
other_income = other_income%>%mutate(sum_other_income = v4_01+v4_02+v4_03+v4_04+v4_05+v4_06+v4_07+v4_08+v4_09+v4_10+v4_11+v4_12)%>%
rename(hhid = a01, land_rent = v4_01, other_rent = v4_02, insurance = v4_03, profits_dividends = v4_04, gratuity_seperation_payment_retire_benefit = v4_05, lottery_prize_cash = v4_06, lottery_prize_kind = v4_07, charity_assistance_cash = v4_08, charity_assistance_kind = v4_09, interest = v4_10, other_cash_receipts = v4_11, other_in_kind_receipts = v4_12, other_assests = v4_13)
# merge table 2 and 3 and 4
remmitance_otherIncome = merge(x = v2_3_male_2011, y = other_income, by = "hhid")
# read in w.I.household data
library(tidyverse)
library(haven)
w.hh.roster.2011 <- read_dta("~/Desktop/SP21/GC295/ww_hh_roster_2011.dta")
# merge table 2 and 3 and 4
remmitance_otherIncome = merge(x = v2_3_male_2011, y = other_income, by = "hhid")
#merge selected_v2 table and w.hh.roster table
w_hh_v2 = merge(x = remittance_in, y = w.hh.roster.2011, by = "hhid")
nrow(w_hh_v2)
#merge selected_v2 table and w.hh.roster table
w.hh.remmitance.otherIncome = merge(x = remittance_otherIncome, y = w.hh.roster.2011, by = "hhid")
#merge selected_v2 table and w.hh.roster table
w.hh.remmitance.otherIncome = merge(x = remmitance_otherIncome, y = w.hh.roster.2011, by = "hhid")
nrow(w_hh_v2)
# filter all the household having any negative shocks
neg_shock = t1_male_2011%>%
rename(hhid = a01, shocks = t1_02, times_of_shocks = t1_03, month_when_shocks_happen = t1_04,
year_when_shocks_happen = t1_05, current_condition = t1_06, loss_value = t1_07, the_way_cope_with_effect_a = t1_08a, the_way_cope_with_effect_b = t1_08b, the_way_cope_with_effect_c = t1_08c, time_span_of_shocks = t1_09, rank_of_shocks = t1_10)
View(neg_shock)
# filter all the household having any positive events
pos_event = t2_male_2011%>%
rename(hhid = a01, event = t2_02, experiencing_positive_event = t2_03, the_month_when_positive_events_happen = t2_04, the_year_when_positive_events_happen = t2_05,
value_of_received_items = t2_06, rank_of_positive_effects = t2_07)%>%
filter(experiencing_positive_event == 1)
View(pos_event)
# merge negative shocks and positive events
neg_pos = merge(x = neg_shock, y = pos_event, by = "hhid")
View(neg_pos)
# merge negative and positive events with w.hh.remittance.otherIncome
w.hh.remittance.otherIncome.neg.pos = merge(x = w.hh.remittance.otherIncome, y = neg_pos, by = "hhid")
#merge selected_v2 table and w.hh.roster table
w.hh.remittance.otherIncome = merge(x = remittance_otherIncome, y = w.hh.roster.2011, by = "hhid")
# select household receiving any money from any person who does not live in your household(condition: v2_01 == 1)
remittance_in = v2_male_2011%>%
rename(hhid = a01, receiving_remittance = v2_01, relationship_with_remitter = v2_02,  remitter_zila_code = v2_03, remitter_country_code = v2_04, receiving_times = v2_05, receiving_amount = v2_06, the_way_remittance_sent = v2_07, expenditure_cut_without_receiving = v2_08, senter_putting_condition = v2_09, items = v2_10)%>%
select(-flag)%>%
filter(receiving_remittance == 1)
# create a new variable `average_remittance`
# change the shape of table by pivot longer on v2_08a:v2_08c(Which expenditure, saving,
# and investment, would have been CUT had the remittance from this source not been received?)
remittance_in = remittance_in%>%
mutate(average_remittance = receiving_amount/receiving_times)
#figure out the money mostly been cut off - interesting!(group by which expenditure would be cut off with receiving money and use count function)
# 3:health
# 4:consumption(food, cloth)
remittance_in%>%group_by(expenditure_cut_without_receiving)%>%
summarise(n = n())
# select all the household sending money to someone who does not live in your household(condition: v3_01 == 1)
# merge v_2 and v_3
remittance_out = v3_male_2011%>%
rename(hhid = a01, sending_remittance = v3_01, relationship_with_recipient = v3_02, recipient_zila_code = v3_03, recipient_country_code = v3_04, sending_times = v3_05, sending_amount = v3_06, the_way_remittance_sent = v3_07)%>%filter( sending_remittance == 1)
remittance = merge(x = remittance_in, y = remittance_out, by = "hhid")
# filtering the merge table to find household both sending and receiving money
# create a variable to calculate net_remittance
remittance = remittance%>%filter(receiving_remittance == 1 & sending_remittance == 1)%>%
mutate(net_remittance = receiving_amount - sending_amount)
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance<0,])
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance==0,])
nrow(v2_3_male_2011_both[v2_3_male_2011_both$net_remittance>0,])
# rename all the variables
# create a new variable sum_other_income to sum up all kinds of income
other_income = v4_male_2011
other_income[is.na(other_income)] = 0
other_income = other_income%>%mutate(sum_other_income = v4_01+v4_02+v4_03+v4_04+v4_05+v4_06+v4_07+v4_08+v4_09+v4_10+v4_11+v4_12)%>%
rename(hhid = a01, land_rent = v4_01, other_rent = v4_02, insurance = v4_03, profits_dividends = v4_04, gratuity_seperation_payment_retire_benefit = v4_05, lottery_prize_cash = v4_06, lottery_prize_kind = v4_07, charity_assistance_cash = v4_08, charity_assistance_kind = v4_09, interest = v4_10, other_cash_receipts = v4_11, other_in_kind_receipts = v4_12, other_assests = v4_13)
# merge table 2 and 3 and 4
remittance_otherIncome = merge(x = v2_3_male_2011, y = other_income, by = "hhid")
#merge selected_v2 table and w.hh.roster table
w.hh.remittance.otherIncome = merge(x = remittance_otherIncome, y = w.hh.roster.2011, by = "hhid")
nrow(w_hh_v2)
# filter all the household having any negative shocks
neg_shock = t1_male_2011%>%
rename(hhid = a01, shocks = t1_02, times_of_shocks = t1_03, month_when_shocks_happen = t1_04,
year_when_shocks_happen = t1_05, current_condition = t1_06, loss_value = t1_07, the_way_cope_with_effect_a = t1_08a, the_way_cope_with_effect_b = t1_08b, the_way_cope_with_effect_c = t1_08c, time_span_of_shocks = t1_09, rank_of_shocks = t1_10)
# filter all the household having any positive events
pos_event = t2_male_2011%>%
rename(hhid = a01, event = t2_02, experiencing_positive_event = t2_03, the_month_when_positive_events_happen = t2_04, the_year_when_positive_events_happen = t2_05,
value_of_received_items = t2_06, rank_of_positive_effects = t2_07)%>%
filter(experiencing_positive_event == 1)
# merge negative shocks and positive events
neg_pos = merge(x = neg_shock, y = pos_event, by = "hhid")
# merge negative and positive events with w.hh.remittance.otherIncome
w.hh.remittance.otherIncome.neg.pos = merge(x = w.hh.remittance.otherIncome, y = neg_pos, by = "hhid")
# merge all variables from 1.1 to 1.14
roster.hh.2011.with.var = merge(x= roster.2011.with.var, y = w.hh.remittance.otherIncome.neg.pos, by = "hhid")
# merge all variables from 1.1 to 1.14
roster.hh.2011.with.var = merge(x= roster.2011.with.var, y = w.hh.remittance.otherIncome.neg.pos, by = "hhid")
View(roster.2011.with.var)
View(roster.hh.2011.with.var)
names(roster.hh.2011.with.var)
# merge all variables from 1.1 to 1.14
roster.hh.2011.with.var = merge(x= roster.2011.with.var, y = w.hh.remittance.otherIncome.neg.pos, by = "hhid")%>%
select(-contains("sample_type."))
names(roster.hh.2011.with.var)
View(i1_male_2011)
